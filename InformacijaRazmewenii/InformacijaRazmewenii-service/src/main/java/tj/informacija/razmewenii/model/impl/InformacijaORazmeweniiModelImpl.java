/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package tj.informacija.razmewenii.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import tj.informacija.razmewenii.model.InformacijaORazmewenii;
import tj.informacija.razmewenii.model.InformacijaORazmeweniiModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the InformacijaORazmewenii service. Represents a row in the &quot;sapp.informacija_o_razmewenii&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link InformacijaORazmeweniiModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link InformacijaORazmeweniiImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see InformacijaORazmeweniiImpl
 * @see InformacijaORazmewenii
 * @see InformacijaORazmeweniiModel
 * @generated
 */
@ProviderType
public class InformacijaORazmeweniiModelImpl extends BaseModelImpl<InformacijaORazmewenii>
	implements InformacijaORazmeweniiModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a informacija o razmewenii model instance should use the {@link InformacijaORazmewenii} interface instead.
	 */
	public static final String TABLE_NAME = "sapp.informacija_o_razmewenii";
	public static final Object[][] TABLE_COLUMNS = {
			{ "cena_postavki", Types.VARCHAR },
			{ "cena_postavki_dlja_zakaza", Types.DOUBLE },
			{ "data_izmenenija", Types.TIMESTAMP },
			{ "data_sozdanija", Types.TIMESTAMP },
			{ "informacija_o_razmewenii_id", Types.BIGINT },
			{ "izmenil", Types.BIGINT },
			{ "izvewenie_id", Types.BIGINT },
			{ "mesto_postavki", Types.VARCHAR },
			{ "mesto_postavki_dlja_zakaza", Types.BIGINT },
			{ "obespechenie_ispolnenija", Types.BIGINT },
			{ "obespechenie_ispolnenija_dlja_zakaza", Types.BIGINT },
			{ "obespechenie_ispolnenija_v_procentah", Types.DOUBLE },
			{ "obespechenie_v_procentah", Types.DOUBLE },
			{ "obespechenie_zajavki", Types.BIGINT },
			{ "obespechenie_zajavki_dlja_zakaza", Types.BIGINT },
			{ "oplata", Types.VARCHAR },
			{ "oplata_dlja_zakaza", Types.BIGINT },
			{ "soputstvujuwie_uslovija", Types.VARCHAR },
			{ "soputstvujuwie_uslovija_dlja_zakaza", Types.BIGINT },
			{ "sozdal", Types.BIGINT },
			{ "srok_dejstvija", Types.VARCHAR },
			{ "srok_dejstvija_dlja_zakaza", Types.BIGINT },
			{ "srok_ispolnenija_zajavki", Types.VARCHAR },
			{ "srok_obespechenija_zajavki", Types.VARCHAR },
			{ "srok_postavki", Types.VARCHAR },
			{ "srok_postavki_dlja_zakaza", Types.BIGINT },
			{ "required_documents_dlja_zakaza", Types.INTEGER },
			{ "required_documents", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("cena_postavki", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("cena_postavki_dlja_zakaza", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("data_izmenenija", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("data_sozdanija", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("informacija_o_razmewenii_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("izmenil", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("izvewenie_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("mesto_postavki", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("mesto_postavki_dlja_zakaza", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("obespechenie_ispolnenija", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("obespechenie_ispolnenija_dlja_zakaza",
			Types.BIGINT);
		TABLE_COLUMNS_MAP.put("obespechenie_ispolnenija_v_procentah",
			Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("obespechenie_v_procentah", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("obespechenie_zajavki", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("obespechenie_zajavki_dlja_zakaza", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("oplata", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("oplata_dlja_zakaza", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("soputstvujuwie_uslovija", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("soputstvujuwie_uslovija_dlja_zakaza",
			Types.BIGINT);
		TABLE_COLUMNS_MAP.put("sozdal", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("srok_dejstvija", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("srok_dejstvija_dlja_zakaza", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("srok_ispolnenija_zajavki", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("srok_obespechenija_zajavki", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("srok_postavki", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("srok_postavki_dlja_zakaza", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("required_documents_dlja_zakaza", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("required_documents", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table sapp.informacija_o_razmewenii (cena_postavki VARCHAR(75) null,cena_postavki_dlja_zakaza DOUBLE,data_izmenenija DATE null,data_sozdanija DATE null,informacija_o_razmewenii_id LONG not null primary key,izmenil LONG,izvewenie_id LONG,mesto_postavki VARCHAR(75) null,mesto_postavki_dlja_zakaza LONG,obespechenie_ispolnenija LONG,obespechenie_ispolnenija_dlja_zakaza LONG,obespechenie_ispolnenija_v_procentah DOUBLE,obespechenie_v_procentah DOUBLE,obespechenie_zajavki LONG,obespechenie_zajavki_dlja_zakaza LONG,oplata VARCHAR(75) null,oplata_dlja_zakaza LONG,soputstvujuwie_uslovija VARCHAR(75) null,soputstvujuwie_uslovija_dlja_zakaza LONG,sozdal LONG,srok_dejstvija VARCHAR(75) null,srok_dejstvija_dlja_zakaza LONG,srok_ispolnenija_zajavki VARCHAR(75) null,srok_obespechenija_zajavki VARCHAR(75) null,srok_postavki VARCHAR(75) null,srok_postavki_dlja_zakaza LONG,required_documents_dlja_zakaza INTEGER,required_documents VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table sapp.informacija_o_razmewenii";
	public static final String ORDER_BY_JPQL = " ORDER BY informacijaORazmewenii.informacija_o_razmewenii_id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY sapp.informacija_o_razmewenii.informacija_o_razmewenii_id ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(tj.informacija.razmewenii.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.tj.informacija.razmewenii.model.InformacijaORazmewenii"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(tj.informacija.razmewenii.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.tj.informacija.razmewenii.model.InformacijaORazmewenii"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(tj.informacija.razmewenii.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.tj.informacija.razmewenii.model.InformacijaORazmewenii"),
			true);
	public static final long IZVEWENIE_ID_COLUMN_BITMASK = 1L;
	public static final long INFORMACIJA_O_RAZMEWENII_ID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(tj.informacija.razmewenii.service.util.ServiceProps.get(
				"lock.expiration.time.tj.informacija.razmewenii.model.InformacijaORazmewenii"));

	public InformacijaORazmeweniiModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _informacija_o_razmewenii_id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setInformacija_o_razmewenii_id(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _informacija_o_razmewenii_id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return InformacijaORazmewenii.class;
	}

	@Override
	public String getModelClassName() {
		return InformacijaORazmewenii.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("cena_postavki", getCena_postavki());
		attributes.put("cena_postavki_dlja_zakaza",
			getCena_postavki_dlja_zakaza());
		attributes.put("data_izmenenija", getData_izmenenija());
		attributes.put("data_sozdanija", getData_sozdanija());
		attributes.put("informacija_o_razmewenii_id",
			getInformacija_o_razmewenii_id());
		attributes.put("izmenil", getIzmenil());
		attributes.put("izvewenie_id", getIzvewenie_id());
		attributes.put("mesto_postavki", getMesto_postavki());
		attributes.put("mesto_postavki_dlja_zakaza",
			getMesto_postavki_dlja_zakaza());
		attributes.put("obespechenie_ispolnenija", getObespechenie_ispolnenija());
		attributes.put("obespechenie_ispolnenija_dlja_zakaza",
			getObespechenie_ispolnenija_dlja_zakaza());
		attributes.put("obespechenie_ispolnenija_v_procentah",
			getObespechenie_ispolnenija_v_procentah());
		attributes.put("obespechenie_v_procentah", getObespechenie_v_procentah());
		attributes.put("obespechenie_zajavki", getObespechenie_zajavki());
		attributes.put("obespechenie_zajavki_dlja_zakaza",
			getObespechenie_zajavki_dlja_zakaza());
		attributes.put("oplata", getOplata());
		attributes.put("oplata_dlja_zakaza", getOplata_dlja_zakaza());
		attributes.put("soputstvujuwie_uslovija", getSoputstvujuwie_uslovija());
		attributes.put("soputstvujuwie_uslovija_dlja_zakaza",
			getSoputstvujuwie_uslovija_dlja_zakaza());
		attributes.put("sozdal", getSozdal());
		attributes.put("srok_dejstvija", getSrok_dejstvija());
		attributes.put("srok_dejstvija_dlja_zakaza",
			getSrok_dejstvija_dlja_zakaza());
		attributes.put("srok_ispolnenija_zajavki", getSrok_ispolnenija_zajavki());
		attributes.put("srok_obespechenija_zajavki",
			getSrok_obespechenija_zajavki());
		attributes.put("srok_postavki", getSrok_postavki());
		attributes.put("srok_postavki_dlja_zakaza",
			getSrok_postavki_dlja_zakaza());
		attributes.put("required_documents_dlja_zakaza",
			getRequired_documents_dlja_zakaza());
		attributes.put("required_documents", getRequired_documents());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String cena_postavki = (String)attributes.get("cena_postavki");

		if (cena_postavki != null) {
			setCena_postavki(cena_postavki);
		}

		Double cena_postavki_dlja_zakaza = (Double)attributes.get(
				"cena_postavki_dlja_zakaza");

		if (cena_postavki_dlja_zakaza != null) {
			setCena_postavki_dlja_zakaza(cena_postavki_dlja_zakaza);
		}

		Date data_izmenenija = (Date)attributes.get("data_izmenenija");

		if (data_izmenenija != null) {
			setData_izmenenija(data_izmenenija);
		}

		Date data_sozdanija = (Date)attributes.get("data_sozdanija");

		if (data_sozdanija != null) {
			setData_sozdanija(data_sozdanija);
		}

		Long informacija_o_razmewenii_id = (Long)attributes.get(
				"informacija_o_razmewenii_id");

		if (informacija_o_razmewenii_id != null) {
			setInformacija_o_razmewenii_id(informacija_o_razmewenii_id);
		}

		Long izmenil = (Long)attributes.get("izmenil");

		if (izmenil != null) {
			setIzmenil(izmenil);
		}

		Long izvewenie_id = (Long)attributes.get("izvewenie_id");

		if (izvewenie_id != null) {
			setIzvewenie_id(izvewenie_id);
		}

		String mesto_postavki = (String)attributes.get("mesto_postavki");

		if (mesto_postavki != null) {
			setMesto_postavki(mesto_postavki);
		}

		Long mesto_postavki_dlja_zakaza = (Long)attributes.get(
				"mesto_postavki_dlja_zakaza");

		if (mesto_postavki_dlja_zakaza != null) {
			setMesto_postavki_dlja_zakaza(mesto_postavki_dlja_zakaza);
		}

		Long obespechenie_ispolnenija = (Long)attributes.get(
				"obespechenie_ispolnenija");

		if (obespechenie_ispolnenija != null) {
			setObespechenie_ispolnenija(obespechenie_ispolnenija);
		}

		Long obespechenie_ispolnenija_dlja_zakaza = (Long)attributes.get(
				"obespechenie_ispolnenija_dlja_zakaza");

		if (obespechenie_ispolnenija_dlja_zakaza != null) {
			setObespechenie_ispolnenija_dlja_zakaza(obespechenie_ispolnenija_dlja_zakaza);
		}

		Double obespechenie_ispolnenija_v_procentah = (Double)attributes.get(
				"obespechenie_ispolnenija_v_procentah");

		if (obespechenie_ispolnenija_v_procentah != null) {
			setObespechenie_ispolnenija_v_procentah(obespechenie_ispolnenija_v_procentah);
		}

		Double obespechenie_v_procentah = (Double)attributes.get(
				"obespechenie_v_procentah");

		if (obespechenie_v_procentah != null) {
			setObespechenie_v_procentah(obespechenie_v_procentah);
		}

		Long obespechenie_zajavki = (Long)attributes.get("obespechenie_zajavki");

		if (obespechenie_zajavki != null) {
			setObespechenie_zajavki(obespechenie_zajavki);
		}

		Long obespechenie_zajavki_dlja_zakaza = (Long)attributes.get(
				"obespechenie_zajavki_dlja_zakaza");

		if (obespechenie_zajavki_dlja_zakaza != null) {
			setObespechenie_zajavki_dlja_zakaza(obespechenie_zajavki_dlja_zakaza);
		}

		String oplata = (String)attributes.get("oplata");

		if (oplata != null) {
			setOplata(oplata);
		}

		Long oplata_dlja_zakaza = (Long)attributes.get("oplata_dlja_zakaza");

		if (oplata_dlja_zakaza != null) {
			setOplata_dlja_zakaza(oplata_dlja_zakaza);
		}

		String soputstvujuwie_uslovija = (String)attributes.get(
				"soputstvujuwie_uslovija");

		if (soputstvujuwie_uslovija != null) {
			setSoputstvujuwie_uslovija(soputstvujuwie_uslovija);
		}

		Long soputstvujuwie_uslovija_dlja_zakaza = (Long)attributes.get(
				"soputstvujuwie_uslovija_dlja_zakaza");

		if (soputstvujuwie_uslovija_dlja_zakaza != null) {
			setSoputstvujuwie_uslovija_dlja_zakaza(soputstvujuwie_uslovija_dlja_zakaza);
		}

		Long sozdal = (Long)attributes.get("sozdal");

		if (sozdal != null) {
			setSozdal(sozdal);
		}

		String srok_dejstvija = (String)attributes.get("srok_dejstvija");

		if (srok_dejstvija != null) {
			setSrok_dejstvija(srok_dejstvija);
		}

		Long srok_dejstvija_dlja_zakaza = (Long)attributes.get(
				"srok_dejstvija_dlja_zakaza");

		if (srok_dejstvija_dlja_zakaza != null) {
			setSrok_dejstvija_dlja_zakaza(srok_dejstvija_dlja_zakaza);
		}

		String srok_ispolnenija_zajavki = (String)attributes.get(
				"srok_ispolnenija_zajavki");

		if (srok_ispolnenija_zajavki != null) {
			setSrok_ispolnenija_zajavki(srok_ispolnenija_zajavki);
		}

		String srok_obespechenija_zajavki = (String)attributes.get(
				"srok_obespechenija_zajavki");

		if (srok_obespechenija_zajavki != null) {
			setSrok_obespechenija_zajavki(srok_obespechenija_zajavki);
		}

		String srok_postavki = (String)attributes.get("srok_postavki");

		if (srok_postavki != null) {
			setSrok_postavki(srok_postavki);
		}

		Long srok_postavki_dlja_zakaza = (Long)attributes.get(
				"srok_postavki_dlja_zakaza");

		if (srok_postavki_dlja_zakaza != null) {
			setSrok_postavki_dlja_zakaza(srok_postavki_dlja_zakaza);
		}

		Integer required_documents_dlja_zakaza = (Integer)attributes.get(
				"required_documents_dlja_zakaza");

		if (required_documents_dlja_zakaza != null) {
			setRequired_documents_dlja_zakaza(required_documents_dlja_zakaza);
		}

		String required_documents = (String)attributes.get("required_documents");

		if (required_documents != null) {
			setRequired_documents(required_documents);
		}
	}

	@Override
	public String getCena_postavki() {
		if (_cena_postavki == null) {
			return StringPool.BLANK;
		}
		else {
			return _cena_postavki;
		}
	}

	@Override
	public void setCena_postavki(String cena_postavki) {
		_cena_postavki = cena_postavki;
	}

	@Override
	public double getCena_postavki_dlja_zakaza() {
		return _cena_postavki_dlja_zakaza;
	}

	@Override
	public void setCena_postavki_dlja_zakaza(double cena_postavki_dlja_zakaza) {
		_cena_postavki_dlja_zakaza = cena_postavki_dlja_zakaza;
	}

	@Override
	public Date getData_izmenenija() {
		return _data_izmenenija;
	}

	@Override
	public void setData_izmenenija(Date data_izmenenija) {
		_data_izmenenija = data_izmenenija;
	}

	@Override
	public Date getData_sozdanija() {
		return _data_sozdanija;
	}

	@Override
	public void setData_sozdanija(Date data_sozdanija) {
		_data_sozdanija = data_sozdanija;
	}

	@Override
	public long getInformacija_o_razmewenii_id() {
		return _informacija_o_razmewenii_id;
	}

	@Override
	public void setInformacija_o_razmewenii_id(long informacija_o_razmewenii_id) {
		_informacija_o_razmewenii_id = informacija_o_razmewenii_id;
	}

	@Override
	public long getIzmenil() {
		return _izmenil;
	}

	@Override
	public void setIzmenil(long izmenil) {
		_izmenil = izmenil;
	}

	@Override
	public long getIzvewenie_id() {
		return _izvewenie_id;
	}

	@Override
	public void setIzvewenie_id(long izvewenie_id) {
		_columnBitmask |= IZVEWENIE_ID_COLUMN_BITMASK;

		if (!_setOriginalIzvewenie_id) {
			_setOriginalIzvewenie_id = true;

			_originalIzvewenie_id = _izvewenie_id;
		}

		_izvewenie_id = izvewenie_id;
	}

	public long getOriginalIzvewenie_id() {
		return _originalIzvewenie_id;
	}

	@Override
	public String getMesto_postavki() {
		if (_mesto_postavki == null) {
			return StringPool.BLANK;
		}
		else {
			return _mesto_postavki;
		}
	}

	@Override
	public void setMesto_postavki(String mesto_postavki) {
		_mesto_postavki = mesto_postavki;
	}

	@Override
	public long getMesto_postavki_dlja_zakaza() {
		return _mesto_postavki_dlja_zakaza;
	}

	@Override
	public void setMesto_postavki_dlja_zakaza(long mesto_postavki_dlja_zakaza) {
		_mesto_postavki_dlja_zakaza = mesto_postavki_dlja_zakaza;
	}

	@Override
	public long getObespechenie_ispolnenija() {
		return _obespechenie_ispolnenija;
	}

	@Override
	public void setObespechenie_ispolnenija(long obespechenie_ispolnenija) {
		_obespechenie_ispolnenija = obespechenie_ispolnenija;
	}

	@Override
	public long getObespechenie_ispolnenija_dlja_zakaza() {
		return _obespechenie_ispolnenija_dlja_zakaza;
	}

	@Override
	public void setObespechenie_ispolnenija_dlja_zakaza(
		long obespechenie_ispolnenija_dlja_zakaza) {
		_obespechenie_ispolnenija_dlja_zakaza = obespechenie_ispolnenija_dlja_zakaza;
	}

	@Override
	public double getObespechenie_ispolnenija_v_procentah() {
		return _obespechenie_ispolnenija_v_procentah;
	}

	@Override
	public void setObespechenie_ispolnenija_v_procentah(
		double obespechenie_ispolnenija_v_procentah) {
		_obespechenie_ispolnenija_v_procentah = obespechenie_ispolnenija_v_procentah;
	}

	@Override
	public double getObespechenie_v_procentah() {
		return _obespechenie_v_procentah;
	}

	@Override
	public void setObespechenie_v_procentah(double obespechenie_v_procentah) {
		_obespechenie_v_procentah = obespechenie_v_procentah;
	}

	@Override
	public long getObespechenie_zajavki() {
		return _obespechenie_zajavki;
	}

	@Override
	public void setObespechenie_zajavki(long obespechenie_zajavki) {
		_obespechenie_zajavki = obespechenie_zajavki;
	}

	@Override
	public long getObespechenie_zajavki_dlja_zakaza() {
		return _obespechenie_zajavki_dlja_zakaza;
	}

	@Override
	public void setObespechenie_zajavki_dlja_zakaza(
		long obespechenie_zajavki_dlja_zakaza) {
		_obespechenie_zajavki_dlja_zakaza = obespechenie_zajavki_dlja_zakaza;
	}

	@Override
	public String getOplata() {
		if (_oplata == null) {
			return StringPool.BLANK;
		}
		else {
			return _oplata;
		}
	}

	@Override
	public void setOplata(String oplata) {
		_oplata = oplata;
	}

	@Override
	public long getOplata_dlja_zakaza() {
		return _oplata_dlja_zakaza;
	}

	@Override
	public void setOplata_dlja_zakaza(long oplata_dlja_zakaza) {
		_oplata_dlja_zakaza = oplata_dlja_zakaza;
	}

	@Override
	public String getSoputstvujuwie_uslovija() {
		if (_soputstvujuwie_uslovija == null) {
			return StringPool.BLANK;
		}
		else {
			return _soputstvujuwie_uslovija;
		}
	}

	@Override
	public void setSoputstvujuwie_uslovija(String soputstvujuwie_uslovija) {
		_soputstvujuwie_uslovija = soputstvujuwie_uslovija;
	}

	@Override
	public long getSoputstvujuwie_uslovija_dlja_zakaza() {
		return _soputstvujuwie_uslovija_dlja_zakaza;
	}

	@Override
	public void setSoputstvujuwie_uslovija_dlja_zakaza(
		long soputstvujuwie_uslovija_dlja_zakaza) {
		_soputstvujuwie_uslovija_dlja_zakaza = soputstvujuwie_uslovija_dlja_zakaza;
	}

	@Override
	public long getSozdal() {
		return _sozdal;
	}

	@Override
	public void setSozdal(long sozdal) {
		_sozdal = sozdal;
	}

	@Override
	public String getSrok_dejstvija() {
		if (_srok_dejstvija == null) {
			return StringPool.BLANK;
		}
		else {
			return _srok_dejstvija;
		}
	}

	@Override
	public void setSrok_dejstvija(String srok_dejstvija) {
		_srok_dejstvija = srok_dejstvija;
	}

	@Override
	public long getSrok_dejstvija_dlja_zakaza() {
		return _srok_dejstvija_dlja_zakaza;
	}

	@Override
	public void setSrok_dejstvija_dlja_zakaza(long srok_dejstvija_dlja_zakaza) {
		_srok_dejstvija_dlja_zakaza = srok_dejstvija_dlja_zakaza;
	}

	@Override
	public String getSrok_ispolnenija_zajavki() {
		if (_srok_ispolnenija_zajavki == null) {
			return StringPool.BLANK;
		}
		else {
			return _srok_ispolnenija_zajavki;
		}
	}

	@Override
	public void setSrok_ispolnenija_zajavki(String srok_ispolnenija_zajavki) {
		_srok_ispolnenija_zajavki = srok_ispolnenija_zajavki;
	}

	@Override
	public String getSrok_obespechenija_zajavki() {
		if (_srok_obespechenija_zajavki == null) {
			return StringPool.BLANK;
		}
		else {
			return _srok_obespechenija_zajavki;
		}
	}

	@Override
	public void setSrok_obespechenija_zajavki(String srok_obespechenija_zajavki) {
		_srok_obespechenija_zajavki = srok_obespechenija_zajavki;
	}

	@Override
	public String getSrok_postavki() {
		if (_srok_postavki == null) {
			return StringPool.BLANK;
		}
		else {
			return _srok_postavki;
		}
	}

	@Override
	public void setSrok_postavki(String srok_postavki) {
		_srok_postavki = srok_postavki;
	}

	@Override
	public long getSrok_postavki_dlja_zakaza() {
		return _srok_postavki_dlja_zakaza;
	}

	@Override
	public void setSrok_postavki_dlja_zakaza(long srok_postavki_dlja_zakaza) {
		_srok_postavki_dlja_zakaza = srok_postavki_dlja_zakaza;
	}

	@Override
	public int getRequired_documents_dlja_zakaza() {
		return _required_documents_dlja_zakaza;
	}

	@Override
	public void setRequired_documents_dlja_zakaza(
		int required_documents_dlja_zakaza) {
		_required_documents_dlja_zakaza = required_documents_dlja_zakaza;
	}

	@Override
	public String getRequired_documents() {
		if (_required_documents == null) {
			return StringPool.BLANK;
		}
		else {
			return _required_documents;
		}
	}

	@Override
	public void setRequired_documents(String required_documents) {
		_required_documents = required_documents;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			InformacijaORazmewenii.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public InformacijaORazmewenii toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (InformacijaORazmewenii)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		InformacijaORazmeweniiImpl informacijaORazmeweniiImpl = new InformacijaORazmeweniiImpl();

		informacijaORazmeweniiImpl.setCena_postavki(getCena_postavki());
		informacijaORazmeweniiImpl.setCena_postavki_dlja_zakaza(getCena_postavki_dlja_zakaza());
		informacijaORazmeweniiImpl.setData_izmenenija(getData_izmenenija());
		informacijaORazmeweniiImpl.setData_sozdanija(getData_sozdanija());
		informacijaORazmeweniiImpl.setInformacija_o_razmewenii_id(getInformacija_o_razmewenii_id());
		informacijaORazmeweniiImpl.setIzmenil(getIzmenil());
		informacijaORazmeweniiImpl.setIzvewenie_id(getIzvewenie_id());
		informacijaORazmeweniiImpl.setMesto_postavki(getMesto_postavki());
		informacijaORazmeweniiImpl.setMesto_postavki_dlja_zakaza(getMesto_postavki_dlja_zakaza());
		informacijaORazmeweniiImpl.setObespechenie_ispolnenija(getObespechenie_ispolnenija());
		informacijaORazmeweniiImpl.setObespechenie_ispolnenija_dlja_zakaza(getObespechenie_ispolnenija_dlja_zakaza());
		informacijaORazmeweniiImpl.setObespechenie_ispolnenija_v_procentah(getObespechenie_ispolnenija_v_procentah());
		informacijaORazmeweniiImpl.setObespechenie_v_procentah(getObespechenie_v_procentah());
		informacijaORazmeweniiImpl.setObespechenie_zajavki(getObespechenie_zajavki());
		informacijaORazmeweniiImpl.setObespechenie_zajavki_dlja_zakaza(getObespechenie_zajavki_dlja_zakaza());
		informacijaORazmeweniiImpl.setOplata(getOplata());
		informacijaORazmeweniiImpl.setOplata_dlja_zakaza(getOplata_dlja_zakaza());
		informacijaORazmeweniiImpl.setSoputstvujuwie_uslovija(getSoputstvujuwie_uslovija());
		informacijaORazmeweniiImpl.setSoputstvujuwie_uslovija_dlja_zakaza(getSoputstvujuwie_uslovija_dlja_zakaza());
		informacijaORazmeweniiImpl.setSozdal(getSozdal());
		informacijaORazmeweniiImpl.setSrok_dejstvija(getSrok_dejstvija());
		informacijaORazmeweniiImpl.setSrok_dejstvija_dlja_zakaza(getSrok_dejstvija_dlja_zakaza());
		informacijaORazmeweniiImpl.setSrok_ispolnenija_zajavki(getSrok_ispolnenija_zajavki());
		informacijaORazmeweniiImpl.setSrok_obespechenija_zajavki(getSrok_obespechenija_zajavki());
		informacijaORazmeweniiImpl.setSrok_postavki(getSrok_postavki());
		informacijaORazmeweniiImpl.setSrok_postavki_dlja_zakaza(getSrok_postavki_dlja_zakaza());
		informacijaORazmeweniiImpl.setRequired_documents_dlja_zakaza(getRequired_documents_dlja_zakaza());
		informacijaORazmeweniiImpl.setRequired_documents(getRequired_documents());

		informacijaORazmeweniiImpl.resetOriginalValues();

		return informacijaORazmeweniiImpl;
	}

	@Override
	public int compareTo(InformacijaORazmewenii informacijaORazmewenii) {
		long primaryKey = informacijaORazmewenii.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof InformacijaORazmewenii)) {
			return false;
		}

		InformacijaORazmewenii informacijaORazmewenii = (InformacijaORazmewenii)obj;

		long primaryKey = informacijaORazmewenii.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		InformacijaORazmeweniiModelImpl informacijaORazmeweniiModelImpl = this;

		informacijaORazmeweniiModelImpl._originalIzvewenie_id = informacijaORazmeweniiModelImpl._izvewenie_id;

		informacijaORazmeweniiModelImpl._setOriginalIzvewenie_id = false;

		informacijaORazmeweniiModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<InformacijaORazmewenii> toCacheModel() {
		InformacijaORazmeweniiCacheModel informacijaORazmeweniiCacheModel = new InformacijaORazmeweniiCacheModel();

		informacijaORazmeweniiCacheModel.cena_postavki = getCena_postavki();

		String cena_postavki = informacijaORazmeweniiCacheModel.cena_postavki;

		if ((cena_postavki != null) && (cena_postavki.length() == 0)) {
			informacijaORazmeweniiCacheModel.cena_postavki = null;
		}

		informacijaORazmeweniiCacheModel.cena_postavki_dlja_zakaza = getCena_postavki_dlja_zakaza();

		Date data_izmenenija = getData_izmenenija();

		if (data_izmenenija != null) {
			informacijaORazmeweniiCacheModel.data_izmenenija = data_izmenenija.getTime();
		}
		else {
			informacijaORazmeweniiCacheModel.data_izmenenija = Long.MIN_VALUE;
		}

		Date data_sozdanija = getData_sozdanija();

		if (data_sozdanija != null) {
			informacijaORazmeweniiCacheModel.data_sozdanija = data_sozdanija.getTime();
		}
		else {
			informacijaORazmeweniiCacheModel.data_sozdanija = Long.MIN_VALUE;
		}

		informacijaORazmeweniiCacheModel.informacija_o_razmewenii_id = getInformacija_o_razmewenii_id();

		informacijaORazmeweniiCacheModel.izmenil = getIzmenil();

		informacijaORazmeweniiCacheModel.izvewenie_id = getIzvewenie_id();

		informacijaORazmeweniiCacheModel.mesto_postavki = getMesto_postavki();

		String mesto_postavki = informacijaORazmeweniiCacheModel.mesto_postavki;

		if ((mesto_postavki != null) && (mesto_postavki.length() == 0)) {
			informacijaORazmeweniiCacheModel.mesto_postavki = null;
		}

		informacijaORazmeweniiCacheModel.mesto_postavki_dlja_zakaza = getMesto_postavki_dlja_zakaza();

		informacijaORazmeweniiCacheModel.obespechenie_ispolnenija = getObespechenie_ispolnenija();

		informacijaORazmeweniiCacheModel.obespechenie_ispolnenija_dlja_zakaza = getObespechenie_ispolnenija_dlja_zakaza();

		informacijaORazmeweniiCacheModel.obespechenie_ispolnenija_v_procentah = getObespechenie_ispolnenija_v_procentah();

		informacijaORazmeweniiCacheModel.obespechenie_v_procentah = getObespechenie_v_procentah();

		informacijaORazmeweniiCacheModel.obespechenie_zajavki = getObespechenie_zajavki();

		informacijaORazmeweniiCacheModel.obespechenie_zajavki_dlja_zakaza = getObespechenie_zajavki_dlja_zakaza();

		informacijaORazmeweniiCacheModel.oplata = getOplata();

		String oplata = informacijaORazmeweniiCacheModel.oplata;

		if ((oplata != null) && (oplata.length() == 0)) {
			informacijaORazmeweniiCacheModel.oplata = null;
		}

		informacijaORazmeweniiCacheModel.oplata_dlja_zakaza = getOplata_dlja_zakaza();

		informacijaORazmeweniiCacheModel.soputstvujuwie_uslovija = getSoputstvujuwie_uslovija();

		String soputstvujuwie_uslovija = informacijaORazmeweniiCacheModel.soputstvujuwie_uslovija;

		if ((soputstvujuwie_uslovija != null) &&
				(soputstvujuwie_uslovija.length() == 0)) {
			informacijaORazmeweniiCacheModel.soputstvujuwie_uslovija = null;
		}

		informacijaORazmeweniiCacheModel.soputstvujuwie_uslovija_dlja_zakaza = getSoputstvujuwie_uslovija_dlja_zakaza();

		informacijaORazmeweniiCacheModel.sozdal = getSozdal();

		informacijaORazmeweniiCacheModel.srok_dejstvija = getSrok_dejstvija();

		String srok_dejstvija = informacijaORazmeweniiCacheModel.srok_dejstvija;

		if ((srok_dejstvija != null) && (srok_dejstvija.length() == 0)) {
			informacijaORazmeweniiCacheModel.srok_dejstvija = null;
		}

		informacijaORazmeweniiCacheModel.srok_dejstvija_dlja_zakaza = getSrok_dejstvija_dlja_zakaza();

		informacijaORazmeweniiCacheModel.srok_ispolnenija_zajavki = getSrok_ispolnenija_zajavki();

		String srok_ispolnenija_zajavki = informacijaORazmeweniiCacheModel.srok_ispolnenija_zajavki;

		if ((srok_ispolnenija_zajavki != null) &&
				(srok_ispolnenija_zajavki.length() == 0)) {
			informacijaORazmeweniiCacheModel.srok_ispolnenija_zajavki = null;
		}

		informacijaORazmeweniiCacheModel.srok_obespechenija_zajavki = getSrok_obespechenija_zajavki();

		String srok_obespechenija_zajavki = informacijaORazmeweniiCacheModel.srok_obespechenija_zajavki;

		if ((srok_obespechenija_zajavki != null) &&
				(srok_obespechenija_zajavki.length() == 0)) {
			informacijaORazmeweniiCacheModel.srok_obespechenija_zajavki = null;
		}

		informacijaORazmeweniiCacheModel.srok_postavki = getSrok_postavki();

		String srok_postavki = informacijaORazmeweniiCacheModel.srok_postavki;

		if ((srok_postavki != null) && (srok_postavki.length() == 0)) {
			informacijaORazmeweniiCacheModel.srok_postavki = null;
		}

		informacijaORazmeweniiCacheModel.srok_postavki_dlja_zakaza = getSrok_postavki_dlja_zakaza();

		informacijaORazmeweniiCacheModel.required_documents_dlja_zakaza = getRequired_documents_dlja_zakaza();

		informacijaORazmeweniiCacheModel.required_documents = getRequired_documents();

		String required_documents = informacijaORazmeweniiCacheModel.required_documents;

		if ((required_documents != null) && (required_documents.length() == 0)) {
			informacijaORazmeweniiCacheModel.required_documents = null;
		}

		return informacijaORazmeweniiCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(57);

		sb.append("{cena_postavki=");
		sb.append(getCena_postavki());
		sb.append(", cena_postavki_dlja_zakaza=");
		sb.append(getCena_postavki_dlja_zakaza());
		sb.append(", data_izmenenija=");
		sb.append(getData_izmenenija());
		sb.append(", data_sozdanija=");
		sb.append(getData_sozdanija());
		sb.append(", informacija_o_razmewenii_id=");
		sb.append(getInformacija_o_razmewenii_id());
		sb.append(", izmenil=");
		sb.append(getIzmenil());
		sb.append(", izvewenie_id=");
		sb.append(getIzvewenie_id());
		sb.append(", mesto_postavki=");
		sb.append(getMesto_postavki());
		sb.append(", mesto_postavki_dlja_zakaza=");
		sb.append(getMesto_postavki_dlja_zakaza());
		sb.append(", obespechenie_ispolnenija=");
		sb.append(getObespechenie_ispolnenija());
		sb.append(", obespechenie_ispolnenija_dlja_zakaza=");
		sb.append(getObespechenie_ispolnenija_dlja_zakaza());
		sb.append(", obespechenie_ispolnenija_v_procentah=");
		sb.append(getObespechenie_ispolnenija_v_procentah());
		sb.append(", obespechenie_v_procentah=");
		sb.append(getObespechenie_v_procentah());
		sb.append(", obespechenie_zajavki=");
		sb.append(getObespechenie_zajavki());
		sb.append(", obespechenie_zajavki_dlja_zakaza=");
		sb.append(getObespechenie_zajavki_dlja_zakaza());
		sb.append(", oplata=");
		sb.append(getOplata());
		sb.append(", oplata_dlja_zakaza=");
		sb.append(getOplata_dlja_zakaza());
		sb.append(", soputstvujuwie_uslovija=");
		sb.append(getSoputstvujuwie_uslovija());
		sb.append(", soputstvujuwie_uslovija_dlja_zakaza=");
		sb.append(getSoputstvujuwie_uslovija_dlja_zakaza());
		sb.append(", sozdal=");
		sb.append(getSozdal());
		sb.append(", srok_dejstvija=");
		sb.append(getSrok_dejstvija());
		sb.append(", srok_dejstvija_dlja_zakaza=");
		sb.append(getSrok_dejstvija_dlja_zakaza());
		sb.append(", srok_ispolnenija_zajavki=");
		sb.append(getSrok_ispolnenija_zajavki());
		sb.append(", srok_obespechenija_zajavki=");
		sb.append(getSrok_obespechenija_zajavki());
		sb.append(", srok_postavki=");
		sb.append(getSrok_postavki());
		sb.append(", srok_postavki_dlja_zakaza=");
		sb.append(getSrok_postavki_dlja_zakaza());
		sb.append(", required_documents_dlja_zakaza=");
		sb.append(getRequired_documents_dlja_zakaza());
		sb.append(", required_documents=");
		sb.append(getRequired_documents());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(88);

		sb.append("<model><model-name>");
		sb.append("tj.informacija.razmewenii.model.InformacijaORazmewenii");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>cena_postavki</column-name><column-value><![CDATA[");
		sb.append(getCena_postavki());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cena_postavki_dlja_zakaza</column-name><column-value><![CDATA[");
		sb.append(getCena_postavki_dlja_zakaza());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>data_izmenenija</column-name><column-value><![CDATA[");
		sb.append(getData_izmenenija());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>data_sozdanija</column-name><column-value><![CDATA[");
		sb.append(getData_sozdanija());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>informacija_o_razmewenii_id</column-name><column-value><![CDATA[");
		sb.append(getInformacija_o_razmewenii_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>izmenil</column-name><column-value><![CDATA[");
		sb.append(getIzmenil());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>izvewenie_id</column-name><column-value><![CDATA[");
		sb.append(getIzvewenie_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mesto_postavki</column-name><column-value><![CDATA[");
		sb.append(getMesto_postavki());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mesto_postavki_dlja_zakaza</column-name><column-value><![CDATA[");
		sb.append(getMesto_postavki_dlja_zakaza());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>obespechenie_ispolnenija</column-name><column-value><![CDATA[");
		sb.append(getObespechenie_ispolnenija());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>obespechenie_ispolnenija_dlja_zakaza</column-name><column-value><![CDATA[");
		sb.append(getObespechenie_ispolnenija_dlja_zakaza());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>obespechenie_ispolnenija_v_procentah</column-name><column-value><![CDATA[");
		sb.append(getObespechenie_ispolnenija_v_procentah());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>obespechenie_v_procentah</column-name><column-value><![CDATA[");
		sb.append(getObespechenie_v_procentah());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>obespechenie_zajavki</column-name><column-value><![CDATA[");
		sb.append(getObespechenie_zajavki());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>obespechenie_zajavki_dlja_zakaza</column-name><column-value><![CDATA[");
		sb.append(getObespechenie_zajavki_dlja_zakaza());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>oplata</column-name><column-value><![CDATA[");
		sb.append(getOplata());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>oplata_dlja_zakaza</column-name><column-value><![CDATA[");
		sb.append(getOplata_dlja_zakaza());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>soputstvujuwie_uslovija</column-name><column-value><![CDATA[");
		sb.append(getSoputstvujuwie_uslovija());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>soputstvujuwie_uslovija_dlja_zakaza</column-name><column-value><![CDATA[");
		sb.append(getSoputstvujuwie_uslovija_dlja_zakaza());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sozdal</column-name><column-value><![CDATA[");
		sb.append(getSozdal());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>srok_dejstvija</column-name><column-value><![CDATA[");
		sb.append(getSrok_dejstvija());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>srok_dejstvija_dlja_zakaza</column-name><column-value><![CDATA[");
		sb.append(getSrok_dejstvija_dlja_zakaza());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>srok_ispolnenija_zajavki</column-name><column-value><![CDATA[");
		sb.append(getSrok_ispolnenija_zajavki());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>srok_obespechenija_zajavki</column-name><column-value><![CDATA[");
		sb.append(getSrok_obespechenija_zajavki());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>srok_postavki</column-name><column-value><![CDATA[");
		sb.append(getSrok_postavki());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>srok_postavki_dlja_zakaza</column-name><column-value><![CDATA[");
		sb.append(getSrok_postavki_dlja_zakaza());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>required_documents_dlja_zakaza</column-name><column-value><![CDATA[");
		sb.append(getRequired_documents_dlja_zakaza());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>required_documents</column-name><column-value><![CDATA[");
		sb.append(getRequired_documents());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = InformacijaORazmewenii.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			InformacijaORazmewenii.class
		};
	private String _cena_postavki;
	private double _cena_postavki_dlja_zakaza;
	private Date _data_izmenenija;
	private Date _data_sozdanija;
	private long _informacija_o_razmewenii_id;
	private long _izmenil;
	private long _izvewenie_id;
	private long _originalIzvewenie_id;
	private boolean _setOriginalIzvewenie_id;
	private String _mesto_postavki;
	private long _mesto_postavki_dlja_zakaza;
	private long _obespechenie_ispolnenija;
	private long _obespechenie_ispolnenija_dlja_zakaza;
	private double _obespechenie_ispolnenija_v_procentah;
	private double _obespechenie_v_procentah;
	private long _obespechenie_zajavki;
	private long _obespechenie_zajavki_dlja_zakaza;
	private String _oplata;
	private long _oplata_dlja_zakaza;
	private String _soputstvujuwie_uslovija;
	private long _soputstvujuwie_uslovija_dlja_zakaza;
	private long _sozdal;
	private String _srok_dejstvija;
	private long _srok_dejstvija_dlja_zakaza;
	private String _srok_ispolnenija_zajavki;
	private String _srok_obespechenija_zajavki;
	private String _srok_postavki;
	private long _srok_postavki_dlja_zakaza;
	private int _required_documents_dlja_zakaza;
	private String _required_documents;
	private long _columnBitmask;
	private InformacijaORazmewenii _escapedModel;
}