/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package tj.strany.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import tj.strany.model.Strany;
import tj.strany.model.StranyModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Strany service. Represents a row in the &quot;sapp.strany&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link StranyModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link StranyImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see StranyImpl
 * @see Strany
 * @see StranyModel
 * @generated
 */
@ProviderType
public class StranyModelImpl extends BaseModelImpl<Strany>
	implements StranyModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a strany model instance should use the {@link Strany} interface instead.
	 */
	public static final String TABLE_NAME = "sapp.strany";
	public static final Object[][] TABLE_COLUMNS = {
			{ "nazvanie", Types.VARCHAR },
			{ "nazvanie_tj", Types.VARCHAR },
			{ "strany_id", Types.BIGINT }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("nazvanie", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("nazvanie_tj", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("strany_id", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE = "create table sapp.strany (nazvanie VARCHAR(75) null,nazvanie_tj VARCHAR(75) null,strany_id LONG not null primary key)";
	public static final String TABLE_SQL_DROP = "drop table sapp.strany";
	public static final String ORDER_BY_JPQL = " ORDER BY strany.strany_id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY sapp.strany.strany_id ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(tj.strany.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.tj.strany.model.Strany"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(tj.strany.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.tj.strany.model.Strany"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(tj.strany.service.util.ServiceProps.get(
				"lock.expiration.time.tj.strany.model.Strany"));

	public StranyModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _strany_id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setStrany_id(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _strany_id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Strany.class;
	}

	@Override
	public String getModelClassName() {
		return Strany.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("nazvanie", getNazvanie());
		attributes.put("nazvanie_tj", getNazvanie_tj());
		attributes.put("strany_id", getStrany_id());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String nazvanie = (String)attributes.get("nazvanie");

		if (nazvanie != null) {
			setNazvanie(nazvanie);
		}

		String nazvanie_tj = (String)attributes.get("nazvanie_tj");

		if (nazvanie_tj != null) {
			setNazvanie_tj(nazvanie_tj);
		}

		Long strany_id = (Long)attributes.get("strany_id");

		if (strany_id != null) {
			setStrany_id(strany_id);
		}
	}

	@Override
	public String getNazvanie() {
		if (_nazvanie == null) {
			return StringPool.BLANK;
		}
		else {
			return _nazvanie;
		}
	}

	@Override
	public void setNazvanie(String nazvanie) {
		_nazvanie = nazvanie;
	}

	@Override
	public String getNazvanie_tj() {
		if (_nazvanie_tj == null) {
			return StringPool.BLANK;
		}
		else {
			return _nazvanie_tj;
		}
	}

	@Override
	public void setNazvanie_tj(String nazvanie_tj) {
		_nazvanie_tj = nazvanie_tj;
	}

	@Override
	public long getStrany_id() {
		return _strany_id;
	}

	@Override
	public void setStrany_id(long strany_id) {
		_strany_id = strany_id;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Strany.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Strany toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Strany)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		StranyImpl stranyImpl = new StranyImpl();

		stranyImpl.setNazvanie(getNazvanie());
		stranyImpl.setNazvanie_tj(getNazvanie_tj());
		stranyImpl.setStrany_id(getStrany_id());

		stranyImpl.resetOriginalValues();

		return stranyImpl;
	}

	@Override
	public int compareTo(Strany strany) {
		int value = 0;

		if (getStrany_id() < strany.getStrany_id()) {
			value = -1;
		}
		else if (getStrany_id() > strany.getStrany_id()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Strany)) {
			return false;
		}

		Strany strany = (Strany)obj;

		long primaryKey = strany.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<Strany> toCacheModel() {
		StranyCacheModel stranyCacheModel = new StranyCacheModel();

		stranyCacheModel.nazvanie = getNazvanie();

		String nazvanie = stranyCacheModel.nazvanie;

		if ((nazvanie != null) && (nazvanie.length() == 0)) {
			stranyCacheModel.nazvanie = null;
		}

		stranyCacheModel.nazvanie_tj = getNazvanie_tj();

		String nazvanie_tj = stranyCacheModel.nazvanie_tj;

		if ((nazvanie_tj != null) && (nazvanie_tj.length() == 0)) {
			stranyCacheModel.nazvanie_tj = null;
		}

		stranyCacheModel.strany_id = getStrany_id();

		return stranyCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(7);

		sb.append("{nazvanie=");
		sb.append(getNazvanie());
		sb.append(", nazvanie_tj=");
		sb.append(getNazvanie_tj());
		sb.append(", strany_id=");
		sb.append(getStrany_id());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(13);

		sb.append("<model><model-name>");
		sb.append("tj.strany.model.Strany");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>nazvanie</column-name><column-value><![CDATA[");
		sb.append(getNazvanie());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nazvanie_tj</column-name><column-value><![CDATA[");
		sb.append(getNazvanie_tj());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>strany_id</column-name><column-value><![CDATA[");
		sb.append(getStrany_id());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = Strany.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			Strany.class
		};
	private String _nazvanie;
	private String _nazvanie_tj;
	private long _strany_id;
	private Strany _escapedModel;
}