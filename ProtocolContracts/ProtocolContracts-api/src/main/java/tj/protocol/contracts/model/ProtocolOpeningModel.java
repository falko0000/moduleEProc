/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package tj.protocol.contracts.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the ProtocolOpening service. Represents a row in the &quot;sapp.protocol_opening&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link tj.protocol.contracts.model.impl.ProtocolOpeningModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link tj.protocol.contracts.model.impl.ProtocolOpeningImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ProtocolOpening
 * @see tj.protocol.contracts.model.impl.ProtocolOpeningImpl
 * @see tj.protocol.contracts.model.impl.ProtocolOpeningModelImpl
 * @generated
 */
@ProviderType
public interface ProtocolOpeningModel extends BaseModel<ProtocolOpening> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a protocol opening model instance should use the {@link ProtocolOpening} interface instead.
	 */

	/**
	 * Returns the primary key of this protocol opening.
	 *
	 * @return the primary key of this protocol opening
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this protocol opening.
	 *
	 * @param primaryKey the primary key of this protocol opening
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the protocol_opening_id of this protocol opening.
	 *
	 * @return the protocol_opening_id of this protocol opening
	 */
	public long getProtocol_opening_id();

	/**
	 * Sets the protocol_opening_id of this protocol opening.
	 *
	 * @param protocol_opening_id the protocol_opening_id of this protocol opening
	 */
	public void setProtocol_opening_id(long protocol_opening_id);

	/**
	 * Returns the izvewenie_id of this protocol opening.
	 *
	 * @return the izvewenie_id of this protocol opening
	 */
	public long getIzvewenie_id();

	/**
	 * Sets the izvewenie_id of this protocol opening.
	 *
	 * @param izvewenie_id the izvewenie_id of this protocol opening
	 */
	public void setIzvewenie_id(long izvewenie_id);

	/**
	 * Returns the created of this protocol opening.
	 *
	 * @return the created of this protocol opening
	 */
	public Date getCreated();

	/**
	 * Sets the created of this protocol opening.
	 *
	 * @param created the created of this protocol opening
	 */
	public void setCreated(Date created);

	/**
	 * Returns the updated of this protocol opening.
	 *
	 * @return the updated of this protocol opening
	 */
	public Date getUpdated();

	/**
	 * Sets the updated of this protocol opening.
	 *
	 * @param updated the updated of this protocol opening
	 */
	public void setUpdated(Date updated);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		tj.protocol.contracts.model.ProtocolOpening protocolOpening);

	@Override
	public int hashCode();

	@Override
	public CacheModel<tj.protocol.contracts.model.ProtocolOpening> toCacheModel();

	@Override
	public tj.protocol.contracts.model.ProtocolOpening toEscapedModel();

	@Override
	public tj.protocol.contracts.model.ProtocolOpening toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}