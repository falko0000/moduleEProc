/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package tj.jekb.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

/**
 * The base model interface for the Jekb service. Represents a row in the &quot;klassifikatory.jekb&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link tj.jekb.model.impl.JekbModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link tj.jekb.model.impl.JekbImpl}.
 * </p>
 *
 * @author falko
 * @see Jekb
 * @see tj.jekb.model.impl.JekbImpl
 * @see tj.jekb.model.impl.JekbModelImpl
 * @generated
 */
@ProviderType
public interface JekbModel extends BaseModel<Jekb> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a jekb model instance should use the {@link Jekb} interface instead.
	 */

	/**
	 * Returns the primary key of this jekb.
	 *
	 * @return the primary key of this jekb
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this jekb.
	 *
	 * @param primaryKey the primary key of this jekb
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the jekb_id of this jekb.
	 *
	 * @return the jekb_id of this jekb
	 */
	public long getJekb_id();

	/**
	 * Sets the jekb_id of this jekb.
	 *
	 * @param jekb_id the jekb_id of this jekb
	 */
	public void setJekb_id(long jekb_id);

	/**
	 * Returns the kod of this jekb.
	 *
	 * @return the kod of this jekb
	 */
	@AutoEscape
	public String getKod();

	/**
	 * Sets the kod of this jekb.
	 *
	 * @param kod the kod of this jekb
	 */
	public void setKod(String kod);

	/**
	 * Returns the nazvanie_ru of this jekb.
	 *
	 * @return the nazvanie_ru of this jekb
	 */
	@AutoEscape
	public String getNazvanie_ru();

	/**
	 * Sets the nazvanie_ru of this jekb.
	 *
	 * @param nazvanie_ru the nazvanie_ru of this jekb
	 */
	public void setNazvanie_ru(String nazvanie_ru);

	/**
	 * Returns the nazvanie_tj of this jekb.
	 *
	 * @return the nazvanie_tj of this jekb
	 */
	@AutoEscape
	public String getNazvanie_tj();

	/**
	 * Sets the nazvanie_tj of this jekb.
	 *
	 * @param nazvanie_tj the nazvanie_tj of this jekb
	 */
	public void setNazvanie_tj(String nazvanie_tj);

	/**
	 * Returns the nazvanie_en of this jekb.
	 *
	 * @return the nazvanie_en of this jekb
	 */
	@AutoEscape
	public String getNazvanie_en();

	/**
	 * Sets the nazvanie_en of this jekb.
	 *
	 * @param nazvanie_en the nazvanie_en of this jekb
	 */
	public void setNazvanie_en(String nazvanie_en);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(tj.jekb.model.Jekb jekb);

	@Override
	public int hashCode();

	@Override
	public CacheModel<tj.jekb.model.Jekb> toCacheModel();

	@Override
	public tj.jekb.model.Jekb toEscapedModel();

	@Override
	public tj.jekb.model.Jekb toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}