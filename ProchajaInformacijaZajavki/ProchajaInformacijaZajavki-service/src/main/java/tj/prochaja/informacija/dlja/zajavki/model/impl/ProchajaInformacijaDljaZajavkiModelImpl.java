/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package tj.prochaja.informacija.dlja.zajavki.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import tj.prochaja.informacija.dlja.zajavki.model.ProchajaInformacijaDljaZajavki;
import tj.prochaja.informacija.dlja.zajavki.model.ProchajaInformacijaDljaZajavkiModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ProchajaInformacijaDljaZajavki service. Represents a row in the &quot;sapp.prochaja_informacija_dlja_zajavki&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link ProchajaInformacijaDljaZajavkiModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ProchajaInformacijaDljaZajavkiImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ProchajaInformacijaDljaZajavkiImpl
 * @see ProchajaInformacijaDljaZajavki
 * @see ProchajaInformacijaDljaZajavkiModel
 * @generated
 */
@ProviderType
public class ProchajaInformacijaDljaZajavkiModelImpl extends BaseModelImpl<ProchajaInformacijaDljaZajavki>
	implements ProchajaInformacijaDljaZajavkiModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a prochaja informacija dlja zajavki model instance should use the {@link ProchajaInformacijaDljaZajavki} interface instead.
	 */
	public static final String TABLE_NAME = "sapp.prochaja_informacija_dlja_zajavki";
	public static final Object[][] TABLE_COLUMNS = {
			{ "cena_postavki", Types.VARCHAR },
			{ "cena_postavki_soglasno_zakazchiku", Types.INTEGER },
			{ "data_sozdanija", Types.TIMESTAMP },
			{ "izvewenie_id", Types.BIGINT },
			{ "lot_id", Types.BIGINT },
			{ "mesto_postavki", Types.VARCHAR },
			{ "mesto_postavki_soglasno_zakazchiku", Types.INTEGER },
			{ "oplata", Types.VARCHAR },
			{ "oplata_soglasno_zakazchiku", Types.INTEGER },
			{ "postavwik_id", Types.BIGINT },
			{ "prochaja_informacija_dlja_zajavki_id", Types.BIGINT },
			{ "soputstvujuwie_uslovija", Types.VARCHAR },
			{ "soputstvujuwie_uslovija_soglasno_zakazchiku", Types.INTEGER },
			{ "sozdal", Types.BIGINT },
			{ "srok_dejstvija", Types.VARCHAR },
			{ "srok_dejstvija_soglasno_zakazchiku", Types.INTEGER },
			{ "srok_ispolnenija_zajavki", Types.VARCHAR },
			{ "srok_ispolnenija_zajavki_soglasno_zakazchiku", Types.INTEGER },
			{ "srok_obespechenija_zajavki", Types.VARCHAR },
			{ "srok_obespechenija_zajavki_soglasno_zakazchiku", Types.INTEGER },
			{ "srok_postavki", Types.VARCHAR },
			{ "srok_postavki_soglasno_zakazchiku", Types.INTEGER }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("cena_postavki", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("cena_postavki_soglasno_zakazchiku", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("data_sozdanija", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("izvewenie_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("lot_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("mesto_postavki", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("mesto_postavki_soglasno_zakazchiku",
			Types.INTEGER);
		TABLE_COLUMNS_MAP.put("oplata", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("oplata_soglasno_zakazchiku", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("postavwik_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("prochaja_informacija_dlja_zajavki_id",
			Types.BIGINT);
		TABLE_COLUMNS_MAP.put("soputstvujuwie_uslovija", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("soputstvujuwie_uslovija_soglasno_zakazchiku",
			Types.INTEGER);
		TABLE_COLUMNS_MAP.put("sozdal", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("srok_dejstvija", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("srok_dejstvija_soglasno_zakazchiku",
			Types.INTEGER);
		TABLE_COLUMNS_MAP.put("srok_ispolnenija_zajavki", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("srok_ispolnenija_zajavki_soglasno_zakazchiku",
			Types.INTEGER);
		TABLE_COLUMNS_MAP.put("srok_obespechenija_zajavki", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("srok_obespechenija_zajavki_soglasno_zakazchiku",
			Types.INTEGER);
		TABLE_COLUMNS_MAP.put("srok_postavki", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("srok_postavki_soglasno_zakazchiku", Types.INTEGER);
	}

	public static final String TABLE_SQL_CREATE = "create table sapp.prochaja_informacija_dlja_zajavki (cena_postavki VARCHAR(75) null,cena_postavki_soglasno_zakazchiku INTEGER,data_sozdanija DATE null,izvewenie_id LONG,lot_id LONG,mesto_postavki VARCHAR(75) null,mesto_postavki_soglasno_zakazchiku INTEGER,oplata VARCHAR(75) null,oplata_soglasno_zakazchiku INTEGER,postavwik_id LONG,prochaja_informacija_dlja_zajavki_id LONG not null primary key,soputstvujuwie_uslovija VARCHAR(75) null,soputstvujuwie_uslovija_soglasno_zakazchiku INTEGER,sozdal LONG,srok_dejstvija VARCHAR(75) null,srok_dejstvija_soglasno_zakazchiku INTEGER,srok_ispolnenija_zajavki VARCHAR(75) null,srok_ispolnenija_zajavki_soglasno_zakazchiku INTEGER,srok_obespechenija_zajavki VARCHAR(75) null,srok_obespechenija_zajavki_soglasno_zakazchiku INTEGER,srok_postavki VARCHAR(75) null,srok_postavki_soglasno_zakazchiku INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table sapp.prochaja_informacija_dlja_zajavki";
	public static final String ORDER_BY_JPQL = " ORDER BY prochajaInformacijaDljaZajavki.prochaja_informacija_dlja_zajavki_id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY sapp.prochaja_informacija_dlja_zajavki.prochaja_informacija_dlja_zajavki_id ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(tj.prochaja.informacija.dlja.zajavki.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.tj.prochaja.informacija.dlja.zajavki.model.ProchajaInformacijaDljaZajavki"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(tj.prochaja.informacija.dlja.zajavki.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.tj.prochaja.informacija.dlja.zajavki.model.ProchajaInformacijaDljaZajavki"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(tj.prochaja.informacija.dlja.zajavki.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.tj.prochaja.informacija.dlja.zajavki.model.ProchajaInformacijaDljaZajavki"),
			true);
	public static final long LOT_ID_COLUMN_BITMASK = 1L;
	public static final long POSTAVWIK_ID_COLUMN_BITMASK = 2L;
	public static final long PROCHAJA_INFORMACIJA_DLJA_ZAJAVKI_ID_COLUMN_BITMASK =
		4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(tj.prochaja.informacija.dlja.zajavki.service.util.ServiceProps.get(
				"lock.expiration.time.tj.prochaja.informacija.dlja.zajavki.model.ProchajaInformacijaDljaZajavki"));

	public ProchajaInformacijaDljaZajavkiModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _prochaja_informacija_dlja_zajavki_id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setProchaja_informacija_dlja_zajavki_id(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _prochaja_informacija_dlja_zajavki_id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ProchajaInformacijaDljaZajavki.class;
	}

	@Override
	public String getModelClassName() {
		return ProchajaInformacijaDljaZajavki.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("cena_postavki", getCena_postavki());
		attributes.put("cena_postavki_soglasno_zakazchiku",
			getCena_postavki_soglasno_zakazchiku());
		attributes.put("data_sozdanija", getData_sozdanija());
		attributes.put("izvewenie_id", getIzvewenie_id());
		attributes.put("lot_id", getLot_id());
		attributes.put("mesto_postavki", getMesto_postavki());
		attributes.put("mesto_postavki_soglasno_zakazchiku",
			getMesto_postavki_soglasno_zakazchiku());
		attributes.put("oplata", getOplata());
		attributes.put("oplata_soglasno_zakazchiku",
			getOplata_soglasno_zakazchiku());
		attributes.put("postavwik_id", getPostavwik_id());
		attributes.put("prochaja_informacija_dlja_zajavki_id",
			getProchaja_informacija_dlja_zajavki_id());
		attributes.put("soputstvujuwie_uslovija", getSoputstvujuwie_uslovija());
		attributes.put("soputstvujuwie_uslovija_soglasno_zakazchiku",
			getSoputstvujuwie_uslovija_soglasno_zakazchiku());
		attributes.put("sozdal", getSozdal());
		attributes.put("srok_dejstvija", getSrok_dejstvija());
		attributes.put("srok_dejstvija_soglasno_zakazchiku",
			getSrok_dejstvija_soglasno_zakazchiku());
		attributes.put("srok_ispolnenija_zajavki", getSrok_ispolnenija_zajavki());
		attributes.put("srok_ispolnenija_zajavki_soglasno_zakazchiku",
			getSrok_ispolnenija_zajavki_soglasno_zakazchiku());
		attributes.put("srok_obespechenija_zajavki",
			getSrok_obespechenija_zajavki());
		attributes.put("srok_obespechenija_zajavki_soglasno_zakazchiku",
			getSrok_obespechenija_zajavki_soglasno_zakazchiku());
		attributes.put("srok_postavki", getSrok_postavki());
		attributes.put("srok_postavki_soglasno_zakazchiku",
			getSrok_postavki_soglasno_zakazchiku());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String cena_postavki = (String)attributes.get("cena_postavki");

		if (cena_postavki != null) {
			setCena_postavki(cena_postavki);
		}

		Integer cena_postavki_soglasno_zakazchiku = (Integer)attributes.get(
				"cena_postavki_soglasno_zakazchiku");

		if (cena_postavki_soglasno_zakazchiku != null) {
			setCena_postavki_soglasno_zakazchiku(cena_postavki_soglasno_zakazchiku);
		}

		Date data_sozdanija = (Date)attributes.get("data_sozdanija");

		if (data_sozdanija != null) {
			setData_sozdanija(data_sozdanija);
		}

		Long izvewenie_id = (Long)attributes.get("izvewenie_id");

		if (izvewenie_id != null) {
			setIzvewenie_id(izvewenie_id);
		}

		Long lot_id = (Long)attributes.get("lot_id");

		if (lot_id != null) {
			setLot_id(lot_id);
		}

		String mesto_postavki = (String)attributes.get("mesto_postavki");

		if (mesto_postavki != null) {
			setMesto_postavki(mesto_postavki);
		}

		Integer mesto_postavki_soglasno_zakazchiku = (Integer)attributes.get(
				"mesto_postavki_soglasno_zakazchiku");

		if (mesto_postavki_soglasno_zakazchiku != null) {
			setMesto_postavki_soglasno_zakazchiku(mesto_postavki_soglasno_zakazchiku);
		}

		String oplata = (String)attributes.get("oplata");

		if (oplata != null) {
			setOplata(oplata);
		}

		Integer oplata_soglasno_zakazchiku = (Integer)attributes.get(
				"oplata_soglasno_zakazchiku");

		if (oplata_soglasno_zakazchiku != null) {
			setOplata_soglasno_zakazchiku(oplata_soglasno_zakazchiku);
		}

		Long postavwik_id = (Long)attributes.get("postavwik_id");

		if (postavwik_id != null) {
			setPostavwik_id(postavwik_id);
		}

		Long prochaja_informacija_dlja_zajavki_id = (Long)attributes.get(
				"prochaja_informacija_dlja_zajavki_id");

		if (prochaja_informacija_dlja_zajavki_id != null) {
			setProchaja_informacija_dlja_zajavki_id(prochaja_informacija_dlja_zajavki_id);
		}

		String soputstvujuwie_uslovija = (String)attributes.get(
				"soputstvujuwie_uslovija");

		if (soputstvujuwie_uslovija != null) {
			setSoputstvujuwie_uslovija(soputstvujuwie_uslovija);
		}

		Integer soputstvujuwie_uslovija_soglasno_zakazchiku = (Integer)attributes.get(
				"soputstvujuwie_uslovija_soglasno_zakazchiku");

		if (soputstvujuwie_uslovija_soglasno_zakazchiku != null) {
			setSoputstvujuwie_uslovija_soglasno_zakazchiku(soputstvujuwie_uslovija_soglasno_zakazchiku);
		}

		Long sozdal = (Long)attributes.get("sozdal");

		if (sozdal != null) {
			setSozdal(sozdal);
		}

		String srok_dejstvija = (String)attributes.get("srok_dejstvija");

		if (srok_dejstvija != null) {
			setSrok_dejstvija(srok_dejstvija);
		}

		Integer srok_dejstvija_soglasno_zakazchiku = (Integer)attributes.get(
				"srok_dejstvija_soglasno_zakazchiku");

		if (srok_dejstvija_soglasno_zakazchiku != null) {
			setSrok_dejstvija_soglasno_zakazchiku(srok_dejstvija_soglasno_zakazchiku);
		}

		String srok_ispolnenija_zajavki = (String)attributes.get(
				"srok_ispolnenija_zajavki");

		if (srok_ispolnenija_zajavki != null) {
			setSrok_ispolnenija_zajavki(srok_ispolnenija_zajavki);
		}

		Integer srok_ispolnenija_zajavki_soglasno_zakazchiku = (Integer)attributes.get(
				"srok_ispolnenija_zajavki_soglasno_zakazchiku");

		if (srok_ispolnenija_zajavki_soglasno_zakazchiku != null) {
			setSrok_ispolnenija_zajavki_soglasno_zakazchiku(srok_ispolnenija_zajavki_soglasno_zakazchiku);
		}

		String srok_obespechenija_zajavki = (String)attributes.get(
				"srok_obespechenija_zajavki");

		if (srok_obespechenija_zajavki != null) {
			setSrok_obespechenija_zajavki(srok_obespechenija_zajavki);
		}

		Integer srok_obespechenija_zajavki_soglasno_zakazchiku = (Integer)attributes.get(
				"srok_obespechenija_zajavki_soglasno_zakazchiku");

		if (srok_obespechenija_zajavki_soglasno_zakazchiku != null) {
			setSrok_obespechenija_zajavki_soglasno_zakazchiku(srok_obespechenija_zajavki_soglasno_zakazchiku);
		}

		String srok_postavki = (String)attributes.get("srok_postavki");

		if (srok_postavki != null) {
			setSrok_postavki(srok_postavki);
		}

		Integer srok_postavki_soglasno_zakazchiku = (Integer)attributes.get(
				"srok_postavki_soglasno_zakazchiku");

		if (srok_postavki_soglasno_zakazchiku != null) {
			setSrok_postavki_soglasno_zakazchiku(srok_postavki_soglasno_zakazchiku);
		}
	}

	@Override
	public String getCena_postavki() {
		if (_cena_postavki == null) {
			return StringPool.BLANK;
		}
		else {
			return _cena_postavki;
		}
	}

	@Override
	public void setCena_postavki(String cena_postavki) {
		_cena_postavki = cena_postavki;
	}

	@Override
	public int getCena_postavki_soglasno_zakazchiku() {
		return _cena_postavki_soglasno_zakazchiku;
	}

	@Override
	public void setCena_postavki_soglasno_zakazchiku(
		int cena_postavki_soglasno_zakazchiku) {
		_cena_postavki_soglasno_zakazchiku = cena_postavki_soglasno_zakazchiku;
	}

	@Override
	public Date getData_sozdanija() {
		return _data_sozdanija;
	}

	@Override
	public void setData_sozdanija(Date data_sozdanija) {
		_data_sozdanija = data_sozdanija;
	}

	@Override
	public long getIzvewenie_id() {
		return _izvewenie_id;
	}

	@Override
	public void setIzvewenie_id(long izvewenie_id) {
		_izvewenie_id = izvewenie_id;
	}

	@Override
	public long getLot_id() {
		return _lot_id;
	}

	@Override
	public void setLot_id(long lot_id) {
		_columnBitmask |= LOT_ID_COLUMN_BITMASK;

		if (!_setOriginalLot_id) {
			_setOriginalLot_id = true;

			_originalLot_id = _lot_id;
		}

		_lot_id = lot_id;
	}

	public long getOriginalLot_id() {
		return _originalLot_id;
	}

	@Override
	public String getMesto_postavki() {
		if (_mesto_postavki == null) {
			return StringPool.BLANK;
		}
		else {
			return _mesto_postavki;
		}
	}

	@Override
	public void setMesto_postavki(String mesto_postavki) {
		_mesto_postavki = mesto_postavki;
	}

	@Override
	public int getMesto_postavki_soglasno_zakazchiku() {
		return _mesto_postavki_soglasno_zakazchiku;
	}

	@Override
	public void setMesto_postavki_soglasno_zakazchiku(
		int mesto_postavki_soglasno_zakazchiku) {
		_mesto_postavki_soglasno_zakazchiku = mesto_postavki_soglasno_zakazchiku;
	}

	@Override
	public String getOplata() {
		if (_oplata == null) {
			return StringPool.BLANK;
		}
		else {
			return _oplata;
		}
	}

	@Override
	public void setOplata(String oplata) {
		_oplata = oplata;
	}

	@Override
	public int getOplata_soglasno_zakazchiku() {
		return _oplata_soglasno_zakazchiku;
	}

	@Override
	public void setOplata_soglasno_zakazchiku(int oplata_soglasno_zakazchiku) {
		_oplata_soglasno_zakazchiku = oplata_soglasno_zakazchiku;
	}

	@Override
	public long getPostavwik_id() {
		return _postavwik_id;
	}

	@Override
	public void setPostavwik_id(long postavwik_id) {
		_columnBitmask |= POSTAVWIK_ID_COLUMN_BITMASK;

		if (!_setOriginalPostavwik_id) {
			_setOriginalPostavwik_id = true;

			_originalPostavwik_id = _postavwik_id;
		}

		_postavwik_id = postavwik_id;
	}

	public long getOriginalPostavwik_id() {
		return _originalPostavwik_id;
	}

	@Override
	public long getProchaja_informacija_dlja_zajavki_id() {
		return _prochaja_informacija_dlja_zajavki_id;
	}

	@Override
	public void setProchaja_informacija_dlja_zajavki_id(
		long prochaja_informacija_dlja_zajavki_id) {
		_prochaja_informacija_dlja_zajavki_id = prochaja_informacija_dlja_zajavki_id;
	}

	@Override
	public String getSoputstvujuwie_uslovija() {
		if (_soputstvujuwie_uslovija == null) {
			return StringPool.BLANK;
		}
		else {
			return _soputstvujuwie_uslovija;
		}
	}

	@Override
	public void setSoputstvujuwie_uslovija(String soputstvujuwie_uslovija) {
		_soputstvujuwie_uslovija = soputstvujuwie_uslovija;
	}

	@Override
	public int getSoputstvujuwie_uslovija_soglasno_zakazchiku() {
		return _soputstvujuwie_uslovija_soglasno_zakazchiku;
	}

	@Override
	public void setSoputstvujuwie_uslovija_soglasno_zakazchiku(
		int soputstvujuwie_uslovija_soglasno_zakazchiku) {
		_soputstvujuwie_uslovija_soglasno_zakazchiku = soputstvujuwie_uslovija_soglasno_zakazchiku;
	}

	@Override
	public long getSozdal() {
		return _sozdal;
	}

	@Override
	public void setSozdal(long sozdal) {
		_sozdal = sozdal;
	}

	@Override
	public String getSrok_dejstvija() {
		if (_srok_dejstvija == null) {
			return StringPool.BLANK;
		}
		else {
			return _srok_dejstvija;
		}
	}

	@Override
	public void setSrok_dejstvija(String srok_dejstvija) {
		_srok_dejstvija = srok_dejstvija;
	}

	@Override
	public int getSrok_dejstvija_soglasno_zakazchiku() {
		return _srok_dejstvija_soglasno_zakazchiku;
	}

	@Override
	public void setSrok_dejstvija_soglasno_zakazchiku(
		int srok_dejstvija_soglasno_zakazchiku) {
		_srok_dejstvija_soglasno_zakazchiku = srok_dejstvija_soglasno_zakazchiku;
	}

	@Override
	public String getSrok_ispolnenija_zajavki() {
		if (_srok_ispolnenija_zajavki == null) {
			return StringPool.BLANK;
		}
		else {
			return _srok_ispolnenija_zajavki;
		}
	}

	@Override
	public void setSrok_ispolnenija_zajavki(String srok_ispolnenija_zajavki) {
		_srok_ispolnenija_zajavki = srok_ispolnenija_zajavki;
	}

	@Override
	public int getSrok_ispolnenija_zajavki_soglasno_zakazchiku() {
		return _srok_ispolnenija_zajavki_soglasno_zakazchiku;
	}

	@Override
	public void setSrok_ispolnenija_zajavki_soglasno_zakazchiku(
		int srok_ispolnenija_zajavki_soglasno_zakazchiku) {
		_srok_ispolnenija_zajavki_soglasno_zakazchiku = srok_ispolnenija_zajavki_soglasno_zakazchiku;
	}

	@Override
	public String getSrok_obespechenija_zajavki() {
		if (_srok_obespechenija_zajavki == null) {
			return StringPool.BLANK;
		}
		else {
			return _srok_obespechenija_zajavki;
		}
	}

	@Override
	public void setSrok_obespechenija_zajavki(String srok_obespechenija_zajavki) {
		_srok_obespechenija_zajavki = srok_obespechenija_zajavki;
	}

	@Override
	public int getSrok_obespechenija_zajavki_soglasno_zakazchiku() {
		return _srok_obespechenija_zajavki_soglasno_zakazchiku;
	}

	@Override
	public void setSrok_obespechenija_zajavki_soglasno_zakazchiku(
		int srok_obespechenija_zajavki_soglasno_zakazchiku) {
		_srok_obespechenija_zajavki_soglasno_zakazchiku = srok_obespechenija_zajavki_soglasno_zakazchiku;
	}

	@Override
	public String getSrok_postavki() {
		if (_srok_postavki == null) {
			return StringPool.BLANK;
		}
		else {
			return _srok_postavki;
		}
	}

	@Override
	public void setSrok_postavki(String srok_postavki) {
		_srok_postavki = srok_postavki;
	}

	@Override
	public int getSrok_postavki_soglasno_zakazchiku() {
		return _srok_postavki_soglasno_zakazchiku;
	}

	@Override
	public void setSrok_postavki_soglasno_zakazchiku(
		int srok_postavki_soglasno_zakazchiku) {
		_srok_postavki_soglasno_zakazchiku = srok_postavki_soglasno_zakazchiku;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			ProchajaInformacijaDljaZajavki.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ProchajaInformacijaDljaZajavki toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ProchajaInformacijaDljaZajavki)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ProchajaInformacijaDljaZajavkiImpl prochajaInformacijaDljaZajavkiImpl = new ProchajaInformacijaDljaZajavkiImpl();

		prochajaInformacijaDljaZajavkiImpl.setCena_postavki(getCena_postavki());
		prochajaInformacijaDljaZajavkiImpl.setCena_postavki_soglasno_zakazchiku(getCena_postavki_soglasno_zakazchiku());
		prochajaInformacijaDljaZajavkiImpl.setData_sozdanija(getData_sozdanija());
		prochajaInformacijaDljaZajavkiImpl.setIzvewenie_id(getIzvewenie_id());
		prochajaInformacijaDljaZajavkiImpl.setLot_id(getLot_id());
		prochajaInformacijaDljaZajavkiImpl.setMesto_postavki(getMesto_postavki());
		prochajaInformacijaDljaZajavkiImpl.setMesto_postavki_soglasno_zakazchiku(getMesto_postavki_soglasno_zakazchiku());
		prochajaInformacijaDljaZajavkiImpl.setOplata(getOplata());
		prochajaInformacijaDljaZajavkiImpl.setOplata_soglasno_zakazchiku(getOplata_soglasno_zakazchiku());
		prochajaInformacijaDljaZajavkiImpl.setPostavwik_id(getPostavwik_id());
		prochajaInformacijaDljaZajavkiImpl.setProchaja_informacija_dlja_zajavki_id(getProchaja_informacija_dlja_zajavki_id());
		prochajaInformacijaDljaZajavkiImpl.setSoputstvujuwie_uslovija(getSoputstvujuwie_uslovija());
		prochajaInformacijaDljaZajavkiImpl.setSoputstvujuwie_uslovija_soglasno_zakazchiku(getSoputstvujuwie_uslovija_soglasno_zakazchiku());
		prochajaInformacijaDljaZajavkiImpl.setSozdal(getSozdal());
		prochajaInformacijaDljaZajavkiImpl.setSrok_dejstvija(getSrok_dejstvija());
		prochajaInformacijaDljaZajavkiImpl.setSrok_dejstvija_soglasno_zakazchiku(getSrok_dejstvija_soglasno_zakazchiku());
		prochajaInformacijaDljaZajavkiImpl.setSrok_ispolnenija_zajavki(getSrok_ispolnenija_zajavki());
		prochajaInformacijaDljaZajavkiImpl.setSrok_ispolnenija_zajavki_soglasno_zakazchiku(getSrok_ispolnenija_zajavki_soglasno_zakazchiku());
		prochajaInformacijaDljaZajavkiImpl.setSrok_obespechenija_zajavki(getSrok_obespechenija_zajavki());
		prochajaInformacijaDljaZajavkiImpl.setSrok_obespechenija_zajavki_soglasno_zakazchiku(getSrok_obespechenija_zajavki_soglasno_zakazchiku());
		prochajaInformacijaDljaZajavkiImpl.setSrok_postavki(getSrok_postavki());
		prochajaInformacijaDljaZajavkiImpl.setSrok_postavki_soglasno_zakazchiku(getSrok_postavki_soglasno_zakazchiku());

		prochajaInformacijaDljaZajavkiImpl.resetOriginalValues();

		return prochajaInformacijaDljaZajavkiImpl;
	}

	@Override
	public int compareTo(
		ProchajaInformacijaDljaZajavki prochajaInformacijaDljaZajavki) {
		long primaryKey = prochajaInformacijaDljaZajavki.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ProchajaInformacijaDljaZajavki)) {
			return false;
		}

		ProchajaInformacijaDljaZajavki prochajaInformacijaDljaZajavki = (ProchajaInformacijaDljaZajavki)obj;

		long primaryKey = prochajaInformacijaDljaZajavki.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		ProchajaInformacijaDljaZajavkiModelImpl prochajaInformacijaDljaZajavkiModelImpl =
			this;

		prochajaInformacijaDljaZajavkiModelImpl._originalLot_id = prochajaInformacijaDljaZajavkiModelImpl._lot_id;

		prochajaInformacijaDljaZajavkiModelImpl._setOriginalLot_id = false;

		prochajaInformacijaDljaZajavkiModelImpl._originalPostavwik_id = prochajaInformacijaDljaZajavkiModelImpl._postavwik_id;

		prochajaInformacijaDljaZajavkiModelImpl._setOriginalPostavwik_id = false;

		prochajaInformacijaDljaZajavkiModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ProchajaInformacijaDljaZajavki> toCacheModel() {
		ProchajaInformacijaDljaZajavkiCacheModel prochajaInformacijaDljaZajavkiCacheModel =
			new ProchajaInformacijaDljaZajavkiCacheModel();

		prochajaInformacijaDljaZajavkiCacheModel.cena_postavki = getCena_postavki();

		String cena_postavki = prochajaInformacijaDljaZajavkiCacheModel.cena_postavki;

		if ((cena_postavki != null) && (cena_postavki.length() == 0)) {
			prochajaInformacijaDljaZajavkiCacheModel.cena_postavki = null;
		}

		prochajaInformacijaDljaZajavkiCacheModel.cena_postavki_soglasno_zakazchiku = getCena_postavki_soglasno_zakazchiku();

		Date data_sozdanija = getData_sozdanija();

		if (data_sozdanija != null) {
			prochajaInformacijaDljaZajavkiCacheModel.data_sozdanija = data_sozdanija.getTime();
		}
		else {
			prochajaInformacijaDljaZajavkiCacheModel.data_sozdanija = Long.MIN_VALUE;
		}

		prochajaInformacijaDljaZajavkiCacheModel.izvewenie_id = getIzvewenie_id();

		prochajaInformacijaDljaZajavkiCacheModel.lot_id = getLot_id();

		prochajaInformacijaDljaZajavkiCacheModel.mesto_postavki = getMesto_postavki();

		String mesto_postavki = prochajaInformacijaDljaZajavkiCacheModel.mesto_postavki;

		if ((mesto_postavki != null) && (mesto_postavki.length() == 0)) {
			prochajaInformacijaDljaZajavkiCacheModel.mesto_postavki = null;
		}

		prochajaInformacijaDljaZajavkiCacheModel.mesto_postavki_soglasno_zakazchiku = getMesto_postavki_soglasno_zakazchiku();

		prochajaInformacijaDljaZajavkiCacheModel.oplata = getOplata();

		String oplata = prochajaInformacijaDljaZajavkiCacheModel.oplata;

		if ((oplata != null) && (oplata.length() == 0)) {
			prochajaInformacijaDljaZajavkiCacheModel.oplata = null;
		}

		prochajaInformacijaDljaZajavkiCacheModel.oplata_soglasno_zakazchiku = getOplata_soglasno_zakazchiku();

		prochajaInformacijaDljaZajavkiCacheModel.postavwik_id = getPostavwik_id();

		prochajaInformacijaDljaZajavkiCacheModel.prochaja_informacija_dlja_zajavki_id = getProchaja_informacija_dlja_zajavki_id();

		prochajaInformacijaDljaZajavkiCacheModel.soputstvujuwie_uslovija = getSoputstvujuwie_uslovija();

		String soputstvujuwie_uslovija = prochajaInformacijaDljaZajavkiCacheModel.soputstvujuwie_uslovija;

		if ((soputstvujuwie_uslovija != null) &&
				(soputstvujuwie_uslovija.length() == 0)) {
			prochajaInformacijaDljaZajavkiCacheModel.soputstvujuwie_uslovija = null;
		}

		prochajaInformacijaDljaZajavkiCacheModel.soputstvujuwie_uslovija_soglasno_zakazchiku = getSoputstvujuwie_uslovija_soglasno_zakazchiku();

		prochajaInformacijaDljaZajavkiCacheModel.sozdal = getSozdal();

		prochajaInformacijaDljaZajavkiCacheModel.srok_dejstvija = getSrok_dejstvija();

		String srok_dejstvija = prochajaInformacijaDljaZajavkiCacheModel.srok_dejstvija;

		if ((srok_dejstvija != null) && (srok_dejstvija.length() == 0)) {
			prochajaInformacijaDljaZajavkiCacheModel.srok_dejstvija = null;
		}

		prochajaInformacijaDljaZajavkiCacheModel.srok_dejstvija_soglasno_zakazchiku = getSrok_dejstvija_soglasno_zakazchiku();

		prochajaInformacijaDljaZajavkiCacheModel.srok_ispolnenija_zajavki = getSrok_ispolnenija_zajavki();

		String srok_ispolnenija_zajavki = prochajaInformacijaDljaZajavkiCacheModel.srok_ispolnenija_zajavki;

		if ((srok_ispolnenija_zajavki != null) &&
				(srok_ispolnenija_zajavki.length() == 0)) {
			prochajaInformacijaDljaZajavkiCacheModel.srok_ispolnenija_zajavki = null;
		}

		prochajaInformacijaDljaZajavkiCacheModel.srok_ispolnenija_zajavki_soglasno_zakazchiku = getSrok_ispolnenija_zajavki_soglasno_zakazchiku();

		prochajaInformacijaDljaZajavkiCacheModel.srok_obespechenija_zajavki = getSrok_obespechenija_zajavki();

		String srok_obespechenija_zajavki = prochajaInformacijaDljaZajavkiCacheModel.srok_obespechenija_zajavki;

		if ((srok_obespechenija_zajavki != null) &&
				(srok_obespechenija_zajavki.length() == 0)) {
			prochajaInformacijaDljaZajavkiCacheModel.srok_obespechenija_zajavki = null;
		}

		prochajaInformacijaDljaZajavkiCacheModel.srok_obespechenija_zajavki_soglasno_zakazchiku = getSrok_obespechenija_zajavki_soglasno_zakazchiku();

		prochajaInformacijaDljaZajavkiCacheModel.srok_postavki = getSrok_postavki();

		String srok_postavki = prochajaInformacijaDljaZajavkiCacheModel.srok_postavki;

		if ((srok_postavki != null) && (srok_postavki.length() == 0)) {
			prochajaInformacijaDljaZajavkiCacheModel.srok_postavki = null;
		}

		prochajaInformacijaDljaZajavkiCacheModel.srok_postavki_soglasno_zakazchiku = getSrok_postavki_soglasno_zakazchiku();

		return prochajaInformacijaDljaZajavkiCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(45);

		sb.append("{cena_postavki=");
		sb.append(getCena_postavki());
		sb.append(", cena_postavki_soglasno_zakazchiku=");
		sb.append(getCena_postavki_soglasno_zakazchiku());
		sb.append(", data_sozdanija=");
		sb.append(getData_sozdanija());
		sb.append(", izvewenie_id=");
		sb.append(getIzvewenie_id());
		sb.append(", lot_id=");
		sb.append(getLot_id());
		sb.append(", mesto_postavki=");
		sb.append(getMesto_postavki());
		sb.append(", mesto_postavki_soglasno_zakazchiku=");
		sb.append(getMesto_postavki_soglasno_zakazchiku());
		sb.append(", oplata=");
		sb.append(getOplata());
		sb.append(", oplata_soglasno_zakazchiku=");
		sb.append(getOplata_soglasno_zakazchiku());
		sb.append(", postavwik_id=");
		sb.append(getPostavwik_id());
		sb.append(", prochaja_informacija_dlja_zajavki_id=");
		sb.append(getProchaja_informacija_dlja_zajavki_id());
		sb.append(", soputstvujuwie_uslovija=");
		sb.append(getSoputstvujuwie_uslovija());
		sb.append(", soputstvujuwie_uslovija_soglasno_zakazchiku=");
		sb.append(getSoputstvujuwie_uslovija_soglasno_zakazchiku());
		sb.append(", sozdal=");
		sb.append(getSozdal());
		sb.append(", srok_dejstvija=");
		sb.append(getSrok_dejstvija());
		sb.append(", srok_dejstvija_soglasno_zakazchiku=");
		sb.append(getSrok_dejstvija_soglasno_zakazchiku());
		sb.append(", srok_ispolnenija_zajavki=");
		sb.append(getSrok_ispolnenija_zajavki());
		sb.append(", srok_ispolnenija_zajavki_soglasno_zakazchiku=");
		sb.append(getSrok_ispolnenija_zajavki_soglasno_zakazchiku());
		sb.append(", srok_obespechenija_zajavki=");
		sb.append(getSrok_obespechenija_zajavki());
		sb.append(", srok_obespechenija_zajavki_soglasno_zakazchiku=");
		sb.append(getSrok_obespechenija_zajavki_soglasno_zakazchiku());
		sb.append(", srok_postavki=");
		sb.append(getSrok_postavki());
		sb.append(", srok_postavki_soglasno_zakazchiku=");
		sb.append(getSrok_postavki_soglasno_zakazchiku());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(70);

		sb.append("<model><model-name>");
		sb.append(
			"tj.prochaja.informacija.dlja.zajavki.model.ProchajaInformacijaDljaZajavki");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>cena_postavki</column-name><column-value><![CDATA[");
		sb.append(getCena_postavki());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cena_postavki_soglasno_zakazchiku</column-name><column-value><![CDATA[");
		sb.append(getCena_postavki_soglasno_zakazchiku());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>data_sozdanija</column-name><column-value><![CDATA[");
		sb.append(getData_sozdanija());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>izvewenie_id</column-name><column-value><![CDATA[");
		sb.append(getIzvewenie_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lot_id</column-name><column-value><![CDATA[");
		sb.append(getLot_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mesto_postavki</column-name><column-value><![CDATA[");
		sb.append(getMesto_postavki());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mesto_postavki_soglasno_zakazchiku</column-name><column-value><![CDATA[");
		sb.append(getMesto_postavki_soglasno_zakazchiku());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>oplata</column-name><column-value><![CDATA[");
		sb.append(getOplata());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>oplata_soglasno_zakazchiku</column-name><column-value><![CDATA[");
		sb.append(getOplata_soglasno_zakazchiku());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>postavwik_id</column-name><column-value><![CDATA[");
		sb.append(getPostavwik_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>prochaja_informacija_dlja_zajavki_id</column-name><column-value><![CDATA[");
		sb.append(getProchaja_informacija_dlja_zajavki_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>soputstvujuwie_uslovija</column-name><column-value><![CDATA[");
		sb.append(getSoputstvujuwie_uslovija());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>soputstvujuwie_uslovija_soglasno_zakazchiku</column-name><column-value><![CDATA[");
		sb.append(getSoputstvujuwie_uslovija_soglasno_zakazchiku());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sozdal</column-name><column-value><![CDATA[");
		sb.append(getSozdal());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>srok_dejstvija</column-name><column-value><![CDATA[");
		sb.append(getSrok_dejstvija());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>srok_dejstvija_soglasno_zakazchiku</column-name><column-value><![CDATA[");
		sb.append(getSrok_dejstvija_soglasno_zakazchiku());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>srok_ispolnenija_zajavki</column-name><column-value><![CDATA[");
		sb.append(getSrok_ispolnenija_zajavki());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>srok_ispolnenija_zajavki_soglasno_zakazchiku</column-name><column-value><![CDATA[");
		sb.append(getSrok_ispolnenija_zajavki_soglasno_zakazchiku());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>srok_obespechenija_zajavki</column-name><column-value><![CDATA[");
		sb.append(getSrok_obespechenija_zajavki());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>srok_obespechenija_zajavki_soglasno_zakazchiku</column-name><column-value><![CDATA[");
		sb.append(getSrok_obespechenija_zajavki_soglasno_zakazchiku());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>srok_postavki</column-name><column-value><![CDATA[");
		sb.append(getSrok_postavki());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>srok_postavki_soglasno_zakazchiku</column-name><column-value><![CDATA[");
		sb.append(getSrok_postavki_soglasno_zakazchiku());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = ProchajaInformacijaDljaZajavki.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			ProchajaInformacijaDljaZajavki.class
		};
	private String _cena_postavki;
	private int _cena_postavki_soglasno_zakazchiku;
	private Date _data_sozdanija;
	private long _izvewenie_id;
	private long _lot_id;
	private long _originalLot_id;
	private boolean _setOriginalLot_id;
	private String _mesto_postavki;
	private int _mesto_postavki_soglasno_zakazchiku;
	private String _oplata;
	private int _oplata_soglasno_zakazchiku;
	private long _postavwik_id;
	private long _originalPostavwik_id;
	private boolean _setOriginalPostavwik_id;
	private long _prochaja_informacija_dlja_zajavki_id;
	private String _soputstvujuwie_uslovija;
	private int _soputstvujuwie_uslovija_soglasno_zakazchiku;
	private long _sozdal;
	private String _srok_dejstvija;
	private int _srok_dejstvija_soglasno_zakazchiku;
	private String _srok_ispolnenija_zajavki;
	private int _srok_ispolnenija_zajavki_soglasno_zakazchiku;
	private String _srok_obespechenija_zajavki;
	private int _srok_obespechenija_zajavki_soglasno_zakazchiku;
	private String _srok_postavki;
	private int _srok_postavki_soglasno_zakazchiku;
	private long _columnBitmask;
	private ProchajaInformacijaDljaZajavki _escapedModel;
}