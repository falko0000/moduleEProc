/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package tj.sapp.services.service.base;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.dao.db.DB;
import com.liferay.portal.kernel.dao.db.DBManagerUtil;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.dao.orm.ActionableDynamicQuery;
import com.liferay.portal.kernel.dao.orm.DefaultActionableDynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQueryFactoryUtil;
import com.liferay.portal.kernel.dao.orm.IndexableActionableDynamicQuery;
import com.liferay.portal.kernel.dao.orm.Projection;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.model.PersistedModel;
import com.liferay.portal.kernel.module.framework.service.IdentifiableOSGiService;
import com.liferay.portal.kernel.search.Indexable;
import com.liferay.portal.kernel.search.IndexableType;
import com.liferay.portal.kernel.service.BaseLocalServiceImpl;
import com.liferay.portal.kernel.service.PersistedModelLocalServiceRegistry;
import com.liferay.portal.kernel.service.persistence.ClassNamePersistence;
import com.liferay.portal.kernel.service.persistence.UserPersistence;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.spring.extender.service.ServiceReference;

import tj.sapp.services.model.OKGZ;
import tj.sapp.services.service.OKGZLocalService;
import tj.sapp.services.service.persistence.OKGZPersistence;
import tj.sapp.services.service.persistence.RajonyPersistence;
import tj.sapp.services.service.persistence.VBKPersistence;
import tj.sapp.services.service.persistence.VW_IzvewenijaPersistence;

import java.io.Serializable;

import java.util.List;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the o k g z local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link tj.sapp.services.service.impl.OKGZLocalServiceImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see tj.sapp.services.service.impl.OKGZLocalServiceImpl
 * @see tj.sapp.services.service.OKGZLocalServiceUtil
 * @generated
 */
@ProviderType
public abstract class OKGZLocalServiceBaseImpl extends BaseLocalServiceImpl
	implements OKGZLocalService, IdentifiableOSGiService {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link tj.sapp.services.service.OKGZLocalServiceUtil} to access the o k g z local service.
	 */

	/**
	 * Adds the o k g z to the database. Also notifies the appropriate model listeners.
	 *
	 * @param okgz the o k g z
	 * @return the o k g z that was added
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public OKGZ addOKGZ(OKGZ okgz) {
		okgz.setNew(true);

		return okgzPersistence.update(okgz);
	}

	/**
	 * Creates a new o k g z with the primary key. Does not add the o k g z to the database.
	 *
	 * @param okgz_id the primary key for the new o k g z
	 * @return the new o k g z
	 */
	@Override
	public OKGZ createOKGZ(long okgz_id) {
		return okgzPersistence.create(okgz_id);
	}

	/**
	 * Deletes the o k g z with the primary key from the database. Also notifies the appropriate model listeners.
	 *
	 * @param okgz_id the primary key of the o k g z
	 * @return the o k g z that was removed
	 * @throws PortalException if a o k g z with the primary key could not be found
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public OKGZ deleteOKGZ(long okgz_id) throws PortalException {
		return okgzPersistence.remove(okgz_id);
	}

	/**
	 * Deletes the o k g z from the database. Also notifies the appropriate model listeners.
	 *
	 * @param okgz the o k g z
	 * @return the o k g z that was removed
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public OKGZ deleteOKGZ(OKGZ okgz) {
		return okgzPersistence.remove(okgz);
	}

	@Override
	public DynamicQuery dynamicQuery() {
		Class<?> clazz = getClass();

		return DynamicQueryFactoryUtil.forClass(OKGZ.class,
			clazz.getClassLoader());
	}

	/**
	 * Performs a dynamic query on the database and returns the matching rows.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the matching rows
	 */
	@Override
	public <T> List<T> dynamicQuery(DynamicQuery dynamicQuery) {
		return okgzPersistence.findWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Performs a dynamic query on the database and returns a range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link tj.sapp.services.model.impl.OKGZModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @return the range of matching rows
	 */
	@Override
	public <T> List<T> dynamicQuery(DynamicQuery dynamicQuery, int start,
		int end) {
		return okgzPersistence.findWithDynamicQuery(dynamicQuery, start, end);
	}

	/**
	 * Performs a dynamic query on the database and returns an ordered range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link tj.sapp.services.model.impl.OKGZModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
	 * @return the ordered range of matching rows
	 */
	@Override
	public <T> List<T> dynamicQuery(DynamicQuery dynamicQuery, int start,
		int end, OrderByComparator<T> orderByComparator) {
		return okgzPersistence.findWithDynamicQuery(dynamicQuery, start, end,
			orderByComparator);
	}

	/**
	 * Returns the number of rows matching the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the number of rows matching the dynamic query
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery) {
		return okgzPersistence.countWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Returns the number of rows matching the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @param projection the projection to apply to the query
	 * @return the number of rows matching the dynamic query
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery,
		Projection projection) {
		return okgzPersistence.countWithDynamicQuery(dynamicQuery, projection);
	}

	@Override
	public OKGZ fetchOKGZ(long okgz_id) {
		return okgzPersistence.fetchByPrimaryKey(okgz_id);
	}

	/**
	 * Returns the o k g z with the primary key.
	 *
	 * @param okgz_id the primary key of the o k g z
	 * @return the o k g z
	 * @throws PortalException if a o k g z with the primary key could not be found
	 */
	@Override
	public OKGZ getOKGZ(long okgz_id) throws PortalException {
		return okgzPersistence.findByPrimaryKey(okgz_id);
	}

	@Override
	public ActionableDynamicQuery getActionableDynamicQuery() {
		ActionableDynamicQuery actionableDynamicQuery = new DefaultActionableDynamicQuery();

		actionableDynamicQuery.setBaseLocalService(okgzLocalService);
		actionableDynamicQuery.setClassLoader(getClassLoader());
		actionableDynamicQuery.setModelClass(OKGZ.class);

		actionableDynamicQuery.setPrimaryKeyPropertyName("okgz_id");

		return actionableDynamicQuery;
	}

	@Override
	public IndexableActionableDynamicQuery getIndexableActionableDynamicQuery() {
		IndexableActionableDynamicQuery indexableActionableDynamicQuery = new IndexableActionableDynamicQuery();

		indexableActionableDynamicQuery.setBaseLocalService(okgzLocalService);
		indexableActionableDynamicQuery.setClassLoader(getClassLoader());
		indexableActionableDynamicQuery.setModelClass(OKGZ.class);

		indexableActionableDynamicQuery.setPrimaryKeyPropertyName("okgz_id");

		return indexableActionableDynamicQuery;
	}

	protected void initActionableDynamicQuery(
		ActionableDynamicQuery actionableDynamicQuery) {
		actionableDynamicQuery.setBaseLocalService(okgzLocalService);
		actionableDynamicQuery.setClassLoader(getClassLoader());
		actionableDynamicQuery.setModelClass(OKGZ.class);

		actionableDynamicQuery.setPrimaryKeyPropertyName("okgz_id");
	}

	/**
	 * @throws PortalException
	 */
	@Override
	public PersistedModel deletePersistedModel(PersistedModel persistedModel)
		throws PortalException {
		return okgzLocalService.deleteOKGZ((OKGZ)persistedModel);
	}

	@Override
	public PersistedModel getPersistedModel(Serializable primaryKeyObj)
		throws PortalException {
		return okgzPersistence.findByPrimaryKey(primaryKeyObj);
	}

	/**
	 * Returns a range of all the o k g zs.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link tj.sapp.services.model.impl.OKGZModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param start the lower bound of the range of o k g zs
	 * @param end the upper bound of the range of o k g zs (not inclusive)
	 * @return the range of o k g zs
	 */
	@Override
	public List<OKGZ> getOKGZs(int start, int end) {
		return okgzPersistence.findAll(start, end);
	}

	/**
	 * Returns the number of o k g zs.
	 *
	 * @return the number of o k g zs
	 */
	@Override
	public int getOKGZsCount() {
		return okgzPersistence.countAll();
	}

	/**
	 * Updates the o k g z in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	 *
	 * @param okgz the o k g z
	 * @return the o k g z that was updated
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public OKGZ updateOKGZ(OKGZ okgz) {
		return okgzPersistence.update(okgz);
	}

	/**
	 * Returns the o k g z local service.
	 *
	 * @return the o k g z local service
	 */
	public OKGZLocalService getOKGZLocalService() {
		return okgzLocalService;
	}

	/**
	 * Sets the o k g z local service.
	 *
	 * @param okgzLocalService the o k g z local service
	 */
	public void setOKGZLocalService(OKGZLocalService okgzLocalService) {
		this.okgzLocalService = okgzLocalService;
	}

	/**
	 * Returns the o k g z persistence.
	 *
	 * @return the o k g z persistence
	 */
	public OKGZPersistence getOKGZPersistence() {
		return okgzPersistence;
	}

	/**
	 * Sets the o k g z persistence.
	 *
	 * @param okgzPersistence the o k g z persistence
	 */
	public void setOKGZPersistence(OKGZPersistence okgzPersistence) {
		this.okgzPersistence = okgzPersistence;
	}

	/**
	 * Returns the Rajony local service.
	 *
	 * @return the Rajony local service
	 */
	public tj.sapp.services.service.RajonyLocalService getRajonyLocalService() {
		return rajonyLocalService;
	}

	/**
	 * Sets the Rajony local service.
	 *
	 * @param rajonyLocalService the Rajony local service
	 */
	public void setRajonyLocalService(
		tj.sapp.services.service.RajonyLocalService rajonyLocalService) {
		this.rajonyLocalService = rajonyLocalService;
	}

	/**
	 * Returns the Rajony persistence.
	 *
	 * @return the Rajony persistence
	 */
	public RajonyPersistence getRajonyPersistence() {
		return rajonyPersistence;
	}

	/**
	 * Sets the Rajony persistence.
	 *
	 * @param rajonyPersistence the Rajony persistence
	 */
	public void setRajonyPersistence(RajonyPersistence rajonyPersistence) {
		this.rajonyPersistence = rajonyPersistence;
	}

	/**
	 * Returns the v b k local service.
	 *
	 * @return the v b k local service
	 */
	public tj.sapp.services.service.VBKLocalService getVBKLocalService() {
		return vbkLocalService;
	}

	/**
	 * Sets the v b k local service.
	 *
	 * @param vbkLocalService the v b k local service
	 */
	public void setVBKLocalService(
		tj.sapp.services.service.VBKLocalService vbkLocalService) {
		this.vbkLocalService = vbkLocalService;
	}

	/**
	 * Returns the v b k persistence.
	 *
	 * @return the v b k persistence
	 */
	public VBKPersistence getVBKPersistence() {
		return vbkPersistence;
	}

	/**
	 * Sets the v b k persistence.
	 *
	 * @param vbkPersistence the v b k persistence
	 */
	public void setVBKPersistence(VBKPersistence vbkPersistence) {
		this.vbkPersistence = vbkPersistence;
	}

	/**
	 * Returns the v w_ izvewenija local service.
	 *
	 * @return the v w_ izvewenija local service
	 */
	public tj.sapp.services.service.VW_IzvewenijaLocalService getVW_IzvewenijaLocalService() {
		return vw_IzvewenijaLocalService;
	}

	/**
	 * Sets the v w_ izvewenija local service.
	 *
	 * @param vw_IzvewenijaLocalService the v w_ izvewenija local service
	 */
	public void setVW_IzvewenijaLocalService(
		tj.sapp.services.service.VW_IzvewenijaLocalService vw_IzvewenijaLocalService) {
		this.vw_IzvewenijaLocalService = vw_IzvewenijaLocalService;
	}

	/**
	 * Returns the v w_ izvewenija persistence.
	 *
	 * @return the v w_ izvewenija persistence
	 */
	public VW_IzvewenijaPersistence getVW_IzvewenijaPersistence() {
		return vw_IzvewenijaPersistence;
	}

	/**
	 * Sets the v w_ izvewenija persistence.
	 *
	 * @param vw_IzvewenijaPersistence the v w_ izvewenija persistence
	 */
	public void setVW_IzvewenijaPersistence(
		VW_IzvewenijaPersistence vw_IzvewenijaPersistence) {
		this.vw_IzvewenijaPersistence = vw_IzvewenijaPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.kernel.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.kernel.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the class name local service.
	 *
	 * @return the class name local service
	 */
	public com.liferay.portal.kernel.service.ClassNameLocalService getClassNameLocalService() {
		return classNameLocalService;
	}

	/**
	 * Sets the class name local service.
	 *
	 * @param classNameLocalService the class name local service
	 */
	public void setClassNameLocalService(
		com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService) {
		this.classNameLocalService = classNameLocalService;
	}

	/**
	 * Returns the class name persistence.
	 *
	 * @return the class name persistence
	 */
	public ClassNamePersistence getClassNamePersistence() {
		return classNamePersistence;
	}

	/**
	 * Sets the class name persistence.
	 *
	 * @param classNamePersistence the class name persistence
	 */
	public void setClassNamePersistence(
		ClassNamePersistence classNamePersistence) {
		this.classNamePersistence = classNamePersistence;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.kernel.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.kernel.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.kernel.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		persistedModelLocalServiceRegistry.register("tj.sapp.services.model.OKGZ",
			okgzLocalService);
	}

	public void destroy() {
		persistedModelLocalServiceRegistry.unregister(
			"tj.sapp.services.model.OKGZ");
	}

	/**
	 * Returns the OSGi service identifier.
	 *
	 * @return the OSGi service identifier
	 */
	@Override
	public String getOSGiServiceIdentifier() {
		return OKGZLocalService.class.getName();
	}

	protected Class<?> getModelClass() {
		return OKGZ.class;
	}

	protected String getModelClassName() {
		return OKGZ.class.getName();
	}

	/**
	 * Performs a SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) {
		try {
			DataSource dataSource = okgzPersistence.getDataSource();

			DB db = DBManagerUtil.getDB();

			sql = db.buildSQL(sql);
			sql = PortalUtil.transformSQL(sql);

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = OKGZLocalService.class)
	protected OKGZLocalService okgzLocalService;
	@BeanReference(type = OKGZPersistence.class)
	protected OKGZPersistence okgzPersistence;
	@BeanReference(type = tj.sapp.services.service.RajonyLocalService.class)
	protected tj.sapp.services.service.RajonyLocalService rajonyLocalService;
	@BeanReference(type = RajonyPersistence.class)
	protected RajonyPersistence rajonyPersistence;
	@BeanReference(type = tj.sapp.services.service.VBKLocalService.class)
	protected tj.sapp.services.service.VBKLocalService vbkLocalService;
	@BeanReference(type = VBKPersistence.class)
	protected VBKPersistence vbkPersistence;
	@BeanReference(type = tj.sapp.services.service.VW_IzvewenijaLocalService.class)
	protected tj.sapp.services.service.VW_IzvewenijaLocalService vw_IzvewenijaLocalService;
	@BeanReference(type = VW_IzvewenijaPersistence.class)
	protected VW_IzvewenijaPersistence vw_IzvewenijaPersistence;
	@ServiceReference(type = com.liferay.counter.kernel.service.CounterLocalService.class)
	protected com.liferay.counter.kernel.service.CounterLocalService counterLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.ClassNameLocalService.class)
	protected com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService;
	@ServiceReference(type = ClassNamePersistence.class)
	protected ClassNamePersistence classNamePersistence;
	@ServiceReference(type = com.liferay.portal.kernel.service.ResourceLocalService.class)
	protected com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.UserLocalService.class)
	protected com.liferay.portal.kernel.service.UserLocalService userLocalService;
	@ServiceReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	@ServiceReference(type = PersistedModelLocalServiceRegistry.class)
	protected PersistedModelLocalServiceRegistry persistedModelLocalServiceRegistry;
}