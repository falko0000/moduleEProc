/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package tj.sapp.services.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import tj.sapp.services.model.Rajony;
import tj.sapp.services.model.RajonyModel;
import tj.sapp.services.model.RajonySoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Rajony service. Represents a row in the &quot;sapp.rajony&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link RajonyModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link RajonyImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see RajonyImpl
 * @see Rajony
 * @see RajonyModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class RajonyModelImpl extends BaseModelImpl<Rajony>
	implements RajonyModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a Rajony model instance should use the {@link Rajony} interface instead.
	 */
	public static final String TABLE_NAME = "sapp.rajony";
	public static final Object[][] TABLE_COLUMNS = {
			{ "rajony_id", Types.BIGINT },
			{ "oblast_id", Types.BIGINT },
			{ "nazvanie", Types.VARCHAR },
			{ "kod_vbk", Types.BIGINT }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("rajony_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("oblast_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("nazvanie", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("kod_vbk", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE = "create table sapp.rajony (rajony_id LONG not null primary key,oblast_id LONG,nazvanie VARCHAR(75) null,kod_vbk LONG)";
	public static final String TABLE_SQL_DROP = "drop table sapp.rajony";
	public static final String ORDER_BY_JPQL = " ORDER BY rajony.rajony_id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY sapp.rajony.rajony_id ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(tj.sapp.services.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.tj.sapp.services.model.Rajony"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(tj.sapp.services.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.tj.sapp.services.model.Rajony"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(tj.sapp.services.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.tj.sapp.services.model.Rajony"),
			true);
	public static final long NAZVANIE_COLUMN_BITMASK = 1L;
	public static final long RAJONY_ID_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Rajony toModel(RajonySoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Rajony model = new RajonyImpl();

		model.setRajony_id(soapModel.getRajony_id());
		model.setOblast_id(soapModel.getOblast_id());
		model.setNazvanie(soapModel.getNazvanie());
		model.setKod_vbk(soapModel.getKod_vbk());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Rajony> toModels(RajonySoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Rajony> models = new ArrayList<Rajony>(soapModels.length);

		for (RajonySoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(tj.sapp.services.service.util.ServiceProps.get(
				"lock.expiration.time.tj.sapp.services.model.Rajony"));

	public RajonyModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _rajony_id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setRajony_id(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _rajony_id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Rajony.class;
	}

	@Override
	public String getModelClassName() {
		return Rajony.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("rajony_id", getRajony_id());
		attributes.put("oblast_id", getOblast_id());
		attributes.put("nazvanie", getNazvanie());
		attributes.put("kod_vbk", getKod_vbk());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long rajony_id = (Long)attributes.get("rajony_id");

		if (rajony_id != null) {
			setRajony_id(rajony_id);
		}

		Long oblast_id = (Long)attributes.get("oblast_id");

		if (oblast_id != null) {
			setOblast_id(oblast_id);
		}

		String nazvanie = (String)attributes.get("nazvanie");

		if (nazvanie != null) {
			setNazvanie(nazvanie);
		}

		Long kod_vbk = (Long)attributes.get("kod_vbk");

		if (kod_vbk != null) {
			setKod_vbk(kod_vbk);
		}
	}

	@JSON
	@Override
	public long getRajony_id() {
		return _rajony_id;
	}

	@Override
	public void setRajony_id(long rajony_id) {
		_rajony_id = rajony_id;
	}

	@JSON
	@Override
	public long getOblast_id() {
		return _oblast_id;
	}

	@Override
	public void setOblast_id(long oblast_id) {
		_oblast_id = oblast_id;
	}

	@JSON
	@Override
	public String getNazvanie() {
		if (_nazvanie == null) {
			return StringPool.BLANK;
		}
		else {
			return _nazvanie;
		}
	}

	@Override
	public void setNazvanie(String nazvanie) {
		_columnBitmask |= NAZVANIE_COLUMN_BITMASK;

		if (_originalNazvanie == null) {
			_originalNazvanie = _nazvanie;
		}

		_nazvanie = nazvanie;
	}

	public String getOriginalNazvanie() {
		return GetterUtil.getString(_originalNazvanie);
	}

	@JSON
	@Override
	public long getKod_vbk() {
		return _kod_vbk;
	}

	@Override
	public void setKod_vbk(long kod_vbk) {
		_kod_vbk = kod_vbk;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Rajony.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Rajony toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Rajony)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		RajonyImpl rajonyImpl = new RajonyImpl();

		rajonyImpl.setRajony_id(getRajony_id());
		rajonyImpl.setOblast_id(getOblast_id());
		rajonyImpl.setNazvanie(getNazvanie());
		rajonyImpl.setKod_vbk(getKod_vbk());

		rajonyImpl.resetOriginalValues();

		return rajonyImpl;
	}

	@Override
	public int compareTo(Rajony rajony) {
		long primaryKey = rajony.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Rajony)) {
			return false;
		}

		Rajony rajony = (Rajony)obj;

		long primaryKey = rajony.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		RajonyModelImpl rajonyModelImpl = this;

		rajonyModelImpl._originalNazvanie = rajonyModelImpl._nazvanie;

		rajonyModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Rajony> toCacheModel() {
		RajonyCacheModel rajonyCacheModel = new RajonyCacheModel();

		rajonyCacheModel.rajony_id = getRajony_id();

		rajonyCacheModel.oblast_id = getOblast_id();

		rajonyCacheModel.nazvanie = getNazvanie();

		String nazvanie = rajonyCacheModel.nazvanie;

		if ((nazvanie != null) && (nazvanie.length() == 0)) {
			rajonyCacheModel.nazvanie = null;
		}

		rajonyCacheModel.kod_vbk = getKod_vbk();

		return rajonyCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(9);

		sb.append("{rajony_id=");
		sb.append(getRajony_id());
		sb.append(", oblast_id=");
		sb.append(getOblast_id());
		sb.append(", nazvanie=");
		sb.append(getNazvanie());
		sb.append(", kod_vbk=");
		sb.append(getKod_vbk());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(16);

		sb.append("<model><model-name>");
		sb.append("tj.sapp.services.model.Rajony");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>rajony_id</column-name><column-value><![CDATA[");
		sb.append(getRajony_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>oblast_id</column-name><column-value><![CDATA[");
		sb.append(getOblast_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nazvanie</column-name><column-value><![CDATA[");
		sb.append(getNazvanie());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>kod_vbk</column-name><column-value><![CDATA[");
		sb.append(getKod_vbk());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = Rajony.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			Rajony.class
		};
	private long _rajony_id;
	private long _oblast_id;
	private String _nazvanie;
	private String _originalNazvanie;
	private long _kod_vbk;
	private long _columnBitmask;
	private Rajony _escapedModel;
}