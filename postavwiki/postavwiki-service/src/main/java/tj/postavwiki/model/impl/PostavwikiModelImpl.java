/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package tj.postavwiki.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import tj.postavwiki.model.Postavwiki;
import tj.postavwiki.model.PostavwikiModel;
import tj.postavwiki.model.PostavwikiSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Postavwiki service. Represents a row in the &quot;sapp.postavwiki&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link PostavwikiModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PostavwikiImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see PostavwikiImpl
 * @see Postavwiki
 * @see PostavwikiModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class PostavwikiModelImpl extends BaseModelImpl<Postavwiki>
	implements PostavwikiModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a postavwiki model instance should use the {@link Postavwiki} interface instead.
	 */
	public static final String TABLE_NAME = "sapp.postavwiki";
	public static final Object[][] TABLE_COLUMNS = {
			{ "adres", Types.VARCHAR },
			{ "data_gosudarstvennoj_registracii", Types.TIMESTAMP },
			{ "data_izmenenija", Types.TIMESTAMP },
			{ "data_sozdanija", Types.TIMESTAMP },
			{ "ein", Types.VARCHAR },
			{ "gorod", Types.VARCHAR },
			{ "inn", Types.VARCHAR },
			{ "izmenil", Types.BIGINT },
			{ "kratkoe_naimenovanie", Types.VARCHAR },
			{ "mesto_registracii", Types.VARCHAR },
			{ "oblast_id", Types.BIGINT },
			{ "polnoe_naimenovanie", Types.VARCHAR },
			{ "postavwiki_id", Types.BIGINT },
			{ "rajon_id", Types.BIGINT },
			{ "sin", Types.VARCHAR },
			{ "sozdal", Types.BIGINT }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("adres", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("data_gosudarstvennoj_registracii",
			Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("data_izmenenija", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("data_sozdanija", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("ein", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("gorod", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("inn", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("izmenil", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("kratkoe_naimenovanie", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("mesto_registracii", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("oblast_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("polnoe_naimenovanie", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("postavwiki_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("rajon_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("sin", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("sozdal", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE = "create table sapp.postavwiki (adres VARCHAR(75) null,data_gosudarstvennoj_registracii DATE null,data_izmenenija DATE null,data_sozdanija DATE null,ein VARCHAR(75) null,gorod VARCHAR(75) null,inn VARCHAR(75) null,izmenil LONG,kratkoe_naimenovanie VARCHAR(75) null,mesto_registracii VARCHAR(75) null,oblast_id LONG,polnoe_naimenovanie VARCHAR(75) null,postavwiki_id LONG not null primary key,rajon_id LONG,sin VARCHAR(75) null,sozdal LONG)";
	public static final String TABLE_SQL_DROP = "drop table sapp.postavwiki";
	public static final String ORDER_BY_JPQL = " ORDER BY postavwiki.postavwiki_id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY sapp.postavwiki.postavwiki_id ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(tj.postavwiki.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.tj.postavwiki.model.Postavwiki"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(tj.postavwiki.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.tj.postavwiki.model.Postavwiki"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Postavwiki toModel(PostavwikiSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Postavwiki model = new PostavwikiImpl();

		model.setAdres(soapModel.getAdres());
		model.setData_gosudarstvennoj_registracii(soapModel.getData_gosudarstvennoj_registracii());
		model.setData_izmenenija(soapModel.getData_izmenenija());
		model.setData_sozdanija(soapModel.getData_sozdanija());
		model.setEin(soapModel.getEin());
		model.setGorod(soapModel.getGorod());
		model.setInn(soapModel.getInn());
		model.setIzmenil(soapModel.getIzmenil());
		model.setKratkoe_naimenovanie(soapModel.getKratkoe_naimenovanie());
		model.setMesto_registracii(soapModel.getMesto_registracii());
		model.setOblast_id(soapModel.getOblast_id());
		model.setPolnoe_naimenovanie(soapModel.getPolnoe_naimenovanie());
		model.setPostavwiki_id(soapModel.getPostavwiki_id());
		model.setRajon_id(soapModel.getRajon_id());
		model.setSin(soapModel.getSin());
		model.setSozdal(soapModel.getSozdal());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Postavwiki> toModels(PostavwikiSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Postavwiki> models = new ArrayList<Postavwiki>(soapModels.length);

		for (PostavwikiSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(tj.postavwiki.service.util.ServiceProps.get(
				"lock.expiration.time.tj.postavwiki.model.Postavwiki"));

	public PostavwikiModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _postavwiki_id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setPostavwiki_id(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _postavwiki_id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Postavwiki.class;
	}

	@Override
	public String getModelClassName() {
		return Postavwiki.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("adres", getAdres());
		attributes.put("data_gosudarstvennoj_registracii",
			getData_gosudarstvennoj_registracii());
		attributes.put("data_izmenenija", getData_izmenenija());
		attributes.put("data_sozdanija", getData_sozdanija());
		attributes.put("ein", getEin());
		attributes.put("gorod", getGorod());
		attributes.put("inn", getInn());
		attributes.put("izmenil", getIzmenil());
		attributes.put("kratkoe_naimenovanie", getKratkoe_naimenovanie());
		attributes.put("mesto_registracii", getMesto_registracii());
		attributes.put("oblast_id", getOblast_id());
		attributes.put("polnoe_naimenovanie", getPolnoe_naimenovanie());
		attributes.put("postavwiki_id", getPostavwiki_id());
		attributes.put("rajon_id", getRajon_id());
		attributes.put("sin", getSin());
		attributes.put("sozdal", getSozdal());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String adres = (String)attributes.get("adres");

		if (adres != null) {
			setAdres(adres);
		}

		Date data_gosudarstvennoj_registracii = (Date)attributes.get(
				"data_gosudarstvennoj_registracii");

		if (data_gosudarstvennoj_registracii != null) {
			setData_gosudarstvennoj_registracii(data_gosudarstvennoj_registracii);
		}

		Date data_izmenenija = (Date)attributes.get("data_izmenenija");

		if (data_izmenenija != null) {
			setData_izmenenija(data_izmenenija);
		}

		Date data_sozdanija = (Date)attributes.get("data_sozdanija");

		if (data_sozdanija != null) {
			setData_sozdanija(data_sozdanija);
		}

		String ein = (String)attributes.get("ein");

		if (ein != null) {
			setEin(ein);
		}

		String gorod = (String)attributes.get("gorod");

		if (gorod != null) {
			setGorod(gorod);
		}

		String inn = (String)attributes.get("inn");

		if (inn != null) {
			setInn(inn);
		}

		Long izmenil = (Long)attributes.get("izmenil");

		if (izmenil != null) {
			setIzmenil(izmenil);
		}

		String kratkoe_naimenovanie = (String)attributes.get(
				"kratkoe_naimenovanie");

		if (kratkoe_naimenovanie != null) {
			setKratkoe_naimenovanie(kratkoe_naimenovanie);
		}

		String mesto_registracii = (String)attributes.get("mesto_registracii");

		if (mesto_registracii != null) {
			setMesto_registracii(mesto_registracii);
		}

		Long oblast_id = (Long)attributes.get("oblast_id");

		if (oblast_id != null) {
			setOblast_id(oblast_id);
		}

		String polnoe_naimenovanie = (String)attributes.get(
				"polnoe_naimenovanie");

		if (polnoe_naimenovanie != null) {
			setPolnoe_naimenovanie(polnoe_naimenovanie);
		}

		Long postavwiki_id = (Long)attributes.get("postavwiki_id");

		if (postavwiki_id != null) {
			setPostavwiki_id(postavwiki_id);
		}

		Long rajon_id = (Long)attributes.get("rajon_id");

		if (rajon_id != null) {
			setRajon_id(rajon_id);
		}

		String sin = (String)attributes.get("sin");

		if (sin != null) {
			setSin(sin);
		}

		Long sozdal = (Long)attributes.get("sozdal");

		if (sozdal != null) {
			setSozdal(sozdal);
		}
	}

	@JSON
	@Override
	public String getAdres() {
		if (_adres == null) {
			return StringPool.BLANK;
		}
		else {
			return _adres;
		}
	}

	@Override
	public void setAdres(String adres) {
		_adres = adres;
	}

	@JSON
	@Override
	public Date getData_gosudarstvennoj_registracii() {
		return _data_gosudarstvennoj_registracii;
	}

	@Override
	public void setData_gosudarstvennoj_registracii(
		Date data_gosudarstvennoj_registracii) {
		_data_gosudarstvennoj_registracii = data_gosudarstvennoj_registracii;
	}

	@JSON
	@Override
	public Date getData_izmenenija() {
		return _data_izmenenija;
	}

	@Override
	public void setData_izmenenija(Date data_izmenenija) {
		_data_izmenenija = data_izmenenija;
	}

	@JSON
	@Override
	public Date getData_sozdanija() {
		return _data_sozdanija;
	}

	@Override
	public void setData_sozdanija(Date data_sozdanija) {
		_data_sozdanija = data_sozdanija;
	}

	@JSON
	@Override
	public String getEin() {
		if (_ein == null) {
			return StringPool.BLANK;
		}
		else {
			return _ein;
		}
	}

	@Override
	public void setEin(String ein) {
		_ein = ein;
	}

	@JSON
	@Override
	public String getGorod() {
		if (_gorod == null) {
			return StringPool.BLANK;
		}
		else {
			return _gorod;
		}
	}

	@Override
	public void setGorod(String gorod) {
		_gorod = gorod;
	}

	@JSON
	@Override
	public String getInn() {
		if (_inn == null) {
			return StringPool.BLANK;
		}
		else {
			return _inn;
		}
	}

	@Override
	public void setInn(String inn) {
		_inn = inn;
	}

	@JSON
	@Override
	public long getIzmenil() {
		return _izmenil;
	}

	@Override
	public void setIzmenil(long izmenil) {
		_izmenil = izmenil;
	}

	@JSON
	@Override
	public String getKratkoe_naimenovanie() {
		if (_kratkoe_naimenovanie == null) {
			return StringPool.BLANK;
		}
		else {
			return _kratkoe_naimenovanie;
		}
	}

	@Override
	public void setKratkoe_naimenovanie(String kratkoe_naimenovanie) {
		_kratkoe_naimenovanie = kratkoe_naimenovanie;
	}

	@JSON
	@Override
	public String getMesto_registracii() {
		if (_mesto_registracii == null) {
			return StringPool.BLANK;
		}
		else {
			return _mesto_registracii;
		}
	}

	@Override
	public void setMesto_registracii(String mesto_registracii) {
		_mesto_registracii = mesto_registracii;
	}

	@JSON
	@Override
	public long getOblast_id() {
		return _oblast_id;
	}

	@Override
	public void setOblast_id(long oblast_id) {
		_oblast_id = oblast_id;
	}

	@JSON
	@Override
	public String getPolnoe_naimenovanie() {
		if (_polnoe_naimenovanie == null) {
			return StringPool.BLANK;
		}
		else {
			return _polnoe_naimenovanie;
		}
	}

	@Override
	public void setPolnoe_naimenovanie(String polnoe_naimenovanie) {
		_polnoe_naimenovanie = polnoe_naimenovanie;
	}

	@JSON
	@Override
	public long getPostavwiki_id() {
		return _postavwiki_id;
	}

	@Override
	public void setPostavwiki_id(long postavwiki_id) {
		_postavwiki_id = postavwiki_id;
	}

	@JSON
	@Override
	public long getRajon_id() {
		return _rajon_id;
	}

	@Override
	public void setRajon_id(long rajon_id) {
		_rajon_id = rajon_id;
	}

	@JSON
	@Override
	public String getSin() {
		if (_sin == null) {
			return StringPool.BLANK;
		}
		else {
			return _sin;
		}
	}

	@Override
	public void setSin(String sin) {
		_sin = sin;
	}

	@JSON
	@Override
	public long getSozdal() {
		return _sozdal;
	}

	@Override
	public void setSozdal(long sozdal) {
		_sozdal = sozdal;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Postavwiki.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Postavwiki toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Postavwiki)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PostavwikiImpl postavwikiImpl = new PostavwikiImpl();

		postavwikiImpl.setAdres(getAdres());
		postavwikiImpl.setData_gosudarstvennoj_registracii(getData_gosudarstvennoj_registracii());
		postavwikiImpl.setData_izmenenija(getData_izmenenija());
		postavwikiImpl.setData_sozdanija(getData_sozdanija());
		postavwikiImpl.setEin(getEin());
		postavwikiImpl.setGorod(getGorod());
		postavwikiImpl.setInn(getInn());
		postavwikiImpl.setIzmenil(getIzmenil());
		postavwikiImpl.setKratkoe_naimenovanie(getKratkoe_naimenovanie());
		postavwikiImpl.setMesto_registracii(getMesto_registracii());
		postavwikiImpl.setOblast_id(getOblast_id());
		postavwikiImpl.setPolnoe_naimenovanie(getPolnoe_naimenovanie());
		postavwikiImpl.setPostavwiki_id(getPostavwiki_id());
		postavwikiImpl.setRajon_id(getRajon_id());
		postavwikiImpl.setSin(getSin());
		postavwikiImpl.setSozdal(getSozdal());

		postavwikiImpl.resetOriginalValues();

		return postavwikiImpl;
	}

	@Override
	public int compareTo(Postavwiki postavwiki) {
		long primaryKey = postavwiki.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Postavwiki)) {
			return false;
		}

		Postavwiki postavwiki = (Postavwiki)obj;

		long primaryKey = postavwiki.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<Postavwiki> toCacheModel() {
		PostavwikiCacheModel postavwikiCacheModel = new PostavwikiCacheModel();

		postavwikiCacheModel.adres = getAdres();

		String adres = postavwikiCacheModel.adres;

		if ((adres != null) && (adres.length() == 0)) {
			postavwikiCacheModel.adres = null;
		}

		Date data_gosudarstvennoj_registracii = getData_gosudarstvennoj_registracii();

		if (data_gosudarstvennoj_registracii != null) {
			postavwikiCacheModel.data_gosudarstvennoj_registracii = data_gosudarstvennoj_registracii.getTime();
		}
		else {
			postavwikiCacheModel.data_gosudarstvennoj_registracii = Long.MIN_VALUE;
		}

		Date data_izmenenija = getData_izmenenija();

		if (data_izmenenija != null) {
			postavwikiCacheModel.data_izmenenija = data_izmenenija.getTime();
		}
		else {
			postavwikiCacheModel.data_izmenenija = Long.MIN_VALUE;
		}

		Date data_sozdanija = getData_sozdanija();

		if (data_sozdanija != null) {
			postavwikiCacheModel.data_sozdanija = data_sozdanija.getTime();
		}
		else {
			postavwikiCacheModel.data_sozdanija = Long.MIN_VALUE;
		}

		postavwikiCacheModel.ein = getEin();

		String ein = postavwikiCacheModel.ein;

		if ((ein != null) && (ein.length() == 0)) {
			postavwikiCacheModel.ein = null;
		}

		postavwikiCacheModel.gorod = getGorod();

		String gorod = postavwikiCacheModel.gorod;

		if ((gorod != null) && (gorod.length() == 0)) {
			postavwikiCacheModel.gorod = null;
		}

		postavwikiCacheModel.inn = getInn();

		String inn = postavwikiCacheModel.inn;

		if ((inn != null) && (inn.length() == 0)) {
			postavwikiCacheModel.inn = null;
		}

		postavwikiCacheModel.izmenil = getIzmenil();

		postavwikiCacheModel.kratkoe_naimenovanie = getKratkoe_naimenovanie();

		String kratkoe_naimenovanie = postavwikiCacheModel.kratkoe_naimenovanie;

		if ((kratkoe_naimenovanie != null) &&
				(kratkoe_naimenovanie.length() == 0)) {
			postavwikiCacheModel.kratkoe_naimenovanie = null;
		}

		postavwikiCacheModel.mesto_registracii = getMesto_registracii();

		String mesto_registracii = postavwikiCacheModel.mesto_registracii;

		if ((mesto_registracii != null) && (mesto_registracii.length() == 0)) {
			postavwikiCacheModel.mesto_registracii = null;
		}

		postavwikiCacheModel.oblast_id = getOblast_id();

		postavwikiCacheModel.polnoe_naimenovanie = getPolnoe_naimenovanie();

		String polnoe_naimenovanie = postavwikiCacheModel.polnoe_naimenovanie;

		if ((polnoe_naimenovanie != null) &&
				(polnoe_naimenovanie.length() == 0)) {
			postavwikiCacheModel.polnoe_naimenovanie = null;
		}

		postavwikiCacheModel.postavwiki_id = getPostavwiki_id();

		postavwikiCacheModel.rajon_id = getRajon_id();

		postavwikiCacheModel.sin = getSin();

		String sin = postavwikiCacheModel.sin;

		if ((sin != null) && (sin.length() == 0)) {
			postavwikiCacheModel.sin = null;
		}

		postavwikiCacheModel.sozdal = getSozdal();

		return postavwikiCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(33);

		sb.append("{adres=");
		sb.append(getAdres());
		sb.append(", data_gosudarstvennoj_registracii=");
		sb.append(getData_gosudarstvennoj_registracii());
		sb.append(", data_izmenenija=");
		sb.append(getData_izmenenija());
		sb.append(", data_sozdanija=");
		sb.append(getData_sozdanija());
		sb.append(", ein=");
		sb.append(getEin());
		sb.append(", gorod=");
		sb.append(getGorod());
		sb.append(", inn=");
		sb.append(getInn());
		sb.append(", izmenil=");
		sb.append(getIzmenil());
		sb.append(", kratkoe_naimenovanie=");
		sb.append(getKratkoe_naimenovanie());
		sb.append(", mesto_registracii=");
		sb.append(getMesto_registracii());
		sb.append(", oblast_id=");
		sb.append(getOblast_id());
		sb.append(", polnoe_naimenovanie=");
		sb.append(getPolnoe_naimenovanie());
		sb.append(", postavwiki_id=");
		sb.append(getPostavwiki_id());
		sb.append(", rajon_id=");
		sb.append(getRajon_id());
		sb.append(", sin=");
		sb.append(getSin());
		sb.append(", sozdal=");
		sb.append(getSozdal());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(52);

		sb.append("<model><model-name>");
		sb.append("tj.postavwiki.model.Postavwiki");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>adres</column-name><column-value><![CDATA[");
		sb.append(getAdres());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>data_gosudarstvennoj_registracii</column-name><column-value><![CDATA[");
		sb.append(getData_gosudarstvennoj_registracii());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>data_izmenenija</column-name><column-value><![CDATA[");
		sb.append(getData_izmenenija());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>data_sozdanija</column-name><column-value><![CDATA[");
		sb.append(getData_sozdanija());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ein</column-name><column-value><![CDATA[");
		sb.append(getEin());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>gorod</column-name><column-value><![CDATA[");
		sb.append(getGorod());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>inn</column-name><column-value><![CDATA[");
		sb.append(getInn());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>izmenil</column-name><column-value><![CDATA[");
		sb.append(getIzmenil());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>kratkoe_naimenovanie</column-name><column-value><![CDATA[");
		sb.append(getKratkoe_naimenovanie());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mesto_registracii</column-name><column-value><![CDATA[");
		sb.append(getMesto_registracii());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>oblast_id</column-name><column-value><![CDATA[");
		sb.append(getOblast_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>polnoe_naimenovanie</column-name><column-value><![CDATA[");
		sb.append(getPolnoe_naimenovanie());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>postavwiki_id</column-name><column-value><![CDATA[");
		sb.append(getPostavwiki_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rajon_id</column-name><column-value><![CDATA[");
		sb.append(getRajon_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sin</column-name><column-value><![CDATA[");
		sb.append(getSin());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sozdal</column-name><column-value><![CDATA[");
		sb.append(getSozdal());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = Postavwiki.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			Postavwiki.class
		};
	private String _adres;
	private Date _data_gosudarstvennoj_registracii;
	private Date _data_izmenenija;
	private Date _data_sozdanija;
	private String _ein;
	private String _gorod;
	private String _inn;
	private long _izmenil;
	private String _kratkoe_naimenovanie;
	private String _mesto_registracii;
	private long _oblast_id;
	private String _polnoe_naimenovanie;
	private long _postavwiki_id;
	private long _rajon_id;
	private String _sin;
	private long _sozdal;
	private Postavwiki _escapedModel;
}